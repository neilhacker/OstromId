{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/checkAddress.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from '../ethereum/web3';\nimport Router from 'next/router';\nimport factory from \"../ethereum/verification\";\n\nclass CampaignIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: \"\",\n      errorTrue: false,\n      addressCheckRes: null,\n      verification_status: null,\n      loaderActive: false\n    });\n\n    _defineProperty(this, \"verifyAddress\", async () => {\n      const adr = document.getElementById('addressToCheck').value;\n      console.log(\"XKJBI\", adr);\n      const res = await this.checkAddress(adr);\n    });\n\n    _defineProperty(this, \"checkAddress\", async adr => {\n      this.setState({\n        loaderActive: true\n      });\n\n      try {\n        this.setState({\n          verification_status: \"Sending address...\"\n        });\n        const accounts = await web3.eth.getAccounts();\n        let res = await factory.methods.checkIfAddressVerified(adr).call({\n          from: accounts[0]\n        });\n        console.log(\"good call\", res);\n\n        if (res) {\n          this.setState({\n            verification_status: \"Address verified\"\n          });\n        } else {\n          this.setState({\n            verification_status: \"Address not verified\"\n          });\n        }\n      } catch (err) {\n        console.log(\"error in submit sol proof\");\n        this.setState({\n          errorMessage: err.message,\n          errorTrue: true\n        });\n      }\n\n      this.setState({\n        loaderActive: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 50,\n              marginLeft: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Check If Address is verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"addressToCheck\",\n              placeholder: \"Enter address\",\n              style: {\n                width: \"45%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.verifyAddress,\n              loading: this.loaderActive,\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), this.state.verification_status, this.state.errorTrue ? /*#__PURE__*/_jsxDEV(Message, {\n              negative: true,\n              children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/checkAddress.js"],"names":["React","Component","Button","Input","Message","Layout","web3","Router","factory","CampaignIndex","errorMessage","errorTrue","addressCheckRes","verification_status","loaderActive","adr","document","getElementById","value","console","log","res","checkAddress","setState","accounts","eth","getAccounts","methods","checkIfAddressVerified","call","from","err","message","render","marginTop","marginLeft","width","verifyAddress","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from '../ethereum/web3'\nimport Router from 'next/router'\nimport factory from \"../ethereum/verification\";\n\n\nclass CampaignIndex extends Component {\n \n    state = {\n        errorMessage: \"\",\n        errorTrue: false,\n        addressCheckRes: null,\n        verification_status: null,\n        loaderActive: false,\n    }\n    verifyAddress = async() => {\n        const adr = document.getElementById('addressToCheck').value;\n        console.log(\"XKJBI\",adr)\n        const res = await this.checkAddress(adr);\n    }\n\n    checkAddress = async (adr) => {\n        this.setState({ loaderActive: true});\n      \n        try {\n          this.setState({verification_status: \"Sending address...\"})\n          const accounts = await web3.eth.getAccounts();\n          \n          let res = await factory.methods\n              .checkIfAddressVerified(adr)\n              .call({\n                  from: accounts[0]\n          });\n          console.log(\"good call\", res)\n\n          if (res) {\n              this.setState({verification_status: \"Address verified\"})\n          } else {\n            this.setState({verification_status: \"Address not verified\"})\n          }\n      \n        } catch (err) {\n            console.log(\"error in submit sol proof\")\n            this.setState({ errorMessage: err.message, errorTrue: true });\n        }\n      this.setState({ loaderActive: false});\n      \n      }\n\n  render() {\n    return (\n      <>\n        <Layout>\n            <div>\n              <div style={{marginTop: 50, marginLeft: 200}}>\n                <h2>Check If Address is verified</h2>\n                <Input id=\"addressToCheck\" placeholder=\"Enter address\" style={{width:\"45%\"}}></Input>\n                <Button primary onClick={this.verifyAddress} loading={this.loaderActive}>Check</Button>\n                {this.state.verification_status}\n                {\n                this.state.errorTrue ?\n                <Message negative>\n                <Message.Header>Error</Message.Header>\n                <p>{this.state.errorMessage}</p>\n                </Message> : null\n                }\n            </div>\n            </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function calculateProof(_x, _x2) {\n  return _calculateProof.apply(this, arguments);\n}\n\nfunction _calculateProof() {\n  _calculateProof = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(preImage, hash) {\n    var _yield$snarkjs$groth, proof, publicSignals, thing, vKey, res;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return snarkjs.groth16.fullProve({\n              x: preImage,\n              hash: hash.toString()\n            }, \"/circuits/hash/circuit.wasm\", \"/circuits/keys/hash/circuit_final.zkey\");\n\n          case 2:\n            _yield$snarkjs$groth = _context.sent;\n            proof = _yield$snarkjs$groth.proof;\n            publicSignals = _yield$snarkjs$groth.publicSignals;\n            console.log(proof);\n            console.log(publicSignals);\n            _context.next = 9;\n            return snarkjs.zkey.soliditycalldata(publicSignals, proof);\n\n          case 9:\n            thing = _context.sent;\n            _context.next = 12;\n            return fetch(\"/circuits/keys/hash/verification_key.json\").then(function (res) {\n              return res.json();\n            });\n\n          case 12:\n            vKey = _context.sent;\n            _context.next = 15;\n            return snarkjs.groth16.verify(vKey, publicSignals, proof);\n\n          case 15:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _calculateProof.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_2/prover.js"],"names":["calculateProof","preImage","hash","snarkjs","groth16","fullProve","x","toString","proof","publicSignals","console","log","zkey","soliditycalldata","thing","fetch","then","res","json","vKey","verify"],"mappings":";;AAAA,gBAAsBA,cAAtB;AAAA;AAAA;;;6EAAO,iBAA8BC,QAA9B,EAAwCC,IAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKC,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAA0B;AAAEC,cAAAA,CAAC,EAAEL,QAAL;AAAeC,cAAAA,IAAI,EAAEA,IAAI,CAACK,QAAL;AAArB,aAA1B,EAAkE,6BAAlE,EAAiG,wCAAjG,CAFL;;AAAA;AAAA;AACKC,YAAAA,KADL,wBACKA,KADL;AACYC,YAAAA,aADZ,wBACYA,aADZ;AAIDC,YAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AALC;AAAA,mBAMmBN,OAAO,CAACS,IAAR,CAAaC,gBAAb,CAA8BJ,aAA9B,EAA4CD,KAA5C,CANnB;;AAAA;AAMKM,YAAAA,KANL;AAAA;AAAA,mBAQkBC,KAAK,CAAC,2CAAD,CAAL,CAAmDC,IAAnD,CAAwD,UAASC,GAAT,EAAc;AACvF,qBAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,aAFkB,CARlB;;AAAA;AAQKC,YAAAA,IARL;AAAA;AAAA,mBAYehB,OAAO,CAACC,OAAR,CAAgBgB,MAAhB,CAAuBD,IAAvB,EAA6BV,aAA7B,EAA4CD,KAA5C,CAZf;;AAAA;AAYGS,YAAAA,GAZH;AAAA,6CAcIA,GAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function calculateProof(preImage, hash) {\n    const { proof, publicSignals } =\n      await snarkjs.groth16.fullProve({ x: preImage, hash: hash.toString() }, \"/circuits/hash/circuit.wasm\", \"/circuits/keys/hash/circuit_final.zkey\");\n\n      console.log(proof)\n      console.log(publicSignals)\n      const thing = await snarkjs.zkey.soliditycalldata(publicSignals,proof)\n\n      const vKey = await fetch(\"/circuits/keys/hash/verification_key.json\").then(function(res) {\n        return res.json();\n      });\n  \n    const res = await snarkjs.groth16.verify(vKey, publicSignals, proof);\n  \n    return res;\n  }\n"]},"metadata":{},"sourceType":"module"}
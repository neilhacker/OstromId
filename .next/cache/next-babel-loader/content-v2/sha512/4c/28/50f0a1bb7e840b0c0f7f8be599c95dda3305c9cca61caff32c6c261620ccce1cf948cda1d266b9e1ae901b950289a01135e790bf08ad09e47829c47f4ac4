{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// require('dotenv').config();\nimport React, { Component } from \"react\";\nimport { Message, Button, Input, Loader } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport Layout from \"../components/Layout\";\nimport web3 from '../ethereum/web3'; // import { Router } from '../routes';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport mimc from '../public/mimc.ts';\nimport { calculateProof } from '../public/prover.js';\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\nvar stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\nvar STATUS_PENDING = \"processing\";\nvar STATUS_SUCCESS = \"verified\";\nvar STATUS_ERROR = \"?\";\nvar STATUS_NOT_STARTED = \"not_submitted\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorMessage: '',\n      errorTrue: false,\n      loaderActive: false,\n      accountAlreadyVerified: false,\n      // stripe\n      clientSecret: null,\n      stripe: null,\n      verification_status: STATUS_NOT_STARTED,\n      verification_session_id: null,\n      sessionIdRandNum: null,\n      sessionIdMimcNum: null,\n      //login\n      loginDetailsRecieved: false,\n      //zkp\n      mimcHashNumState: null,\n      solidityVerifierProof: null,\n      zkResult: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var metaMaskPresent, alreadyVerified, paidDeposit;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.checkMetaMask();\n\n            case 2:\n              metaMaskPresent = _context.sent;\n\n              if (metaMaskPresent) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              _context.next = 7;\n              return _this.checkIfAccountVerified();\n\n            case 7:\n              alreadyVerified = _context.sent;\n              _context.next = 10;\n              return _this.checkDepositPaid();\n\n            case 10:\n              paidDeposit = _context.sent;\n              _context.next = 13;\n              return _this.createNewStripeSession();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMetaMask\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context2.sent;\n              return _context2.abrupt(\"return\", true);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"MetaMask error\");\n\n              _this.setState({\n                errorMessage: \"It looks like you don't have metamask up and running, which you need to use this service\",\n                errorTrue: true\n              });\n\n              return _context2.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkIfAccountVerified\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var accounts, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context3.sent;\n              _context3.next = 6;\n              return factory.methods.checkIfAddressVerified().call({\n                from: accounts[0]\n              });\n\n            case 6:\n              res = _context3.sent;\n\n              _this.setState({\n                accountAlreadyVerified: res\n              });\n\n              return _context3.abrupt(\"return\", true);\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"MetMask aerror\");\n\n              _this.setState({\n                errorMessage: \"It looks like you may be on the wrong MetaMask network\",\n                errorTrue: true\n              });\n\n              return _context3.abrupt(\"return\", false);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkDepositPaid\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context4.sent;\n              _context4.next = 6;\n              return factory.methods.checkIfDepositPayed().call({\n                from: accounts[0]\n              });\n\n            case 6:\n              res = _context4.sent;\n\n              _this.setState({\n                depositAlreadyPaid: res\n              });\n\n              return _context4.abrupt(\"return\", res);\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(\"error when initially checking account\");\n\n              _this.setState({\n                errorMessage: \"It looks like there was an error checking if you had paid the deposit\",\n                errorTrue: true\n              });\n\n              return _context4.abrupt(\"return\", false);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"createNewStripeSession\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var accounts, requestOptions, response, data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context5.sent;\n              requestOptions = {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  title: 'POST of metamask address',\n                  address: accounts[0]\n                })\n              };\n              _context5.next = 7;\n              return fetch('/api/create-verification-session', requestOptions);\n\n            case 7:\n              response = _context5.sent;\n              _context5.next = 10;\n              return response.json();\n\n            case 10:\n              data = _context5.sent;\n\n              _this.setState({\n                clientSecret: data.clientSecret,\n                verification_session_id: data.id\n              }); // fetch('/api/create-verification-session')\n              // .then(res => res.json())\n              // .then(data => this.setState({clientSecret: data.clientSecret, verification_session_id: data.id}))\n\n\n              _context5.t0 = _this;\n              _context5.next = 15;\n              return stripePromise;\n\n            case 15:\n              _context5.t1 = _context5.sent;\n              _context5.t2 = {\n                stripe: _context5.t1\n              };\n\n              _context5.t0.setState.call(_context5.t0, _context5.t2);\n\n              _context5.next = 25;\n              break;\n\n            case 20:\n              _context5.prev = 20;\n              _context5.t3 = _context5[\"catch\"](0);\n              console.log(\"error when trying to create new verification session\");\n\n              _this.setState({\n                errorMessage: \"It looks like there was an issue creating a new verification session\",\n                errorTrue: true\n              });\n\n              return _context5.abrupt(\"return\", false);\n\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 20]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyIdentity\", /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(event) {\n        var _this$state, stripe, clientSecret, _yield$stripe$verifyI, error;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.resetError();\n\n                _this.setState({\n                  loaderActive: true\n                });\n\n                _this$state = _this.state, stripe = _this$state.stripe, clientSecret = _this$state.clientSecret;\n\n                if (!(!stripe || !clientSecret)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _this.setState({\n                  loaderActive: false,\n                  errorTrue: true,\n                  errorMessage: \"Stripe not connecting\"\n                });\n\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _context6.next = 9;\n                return stripe.verifyIdentity(clientSecret);\n\n              case 9:\n                _yield$stripe$verifyI = _context6.sent;\n                error = _yield$stripe$verifyI.error;\n\n                if (error) {\n                  console.log('[error]', error);\n                } else {\n                  console.log('Verification submitted!');\n\n                  _this.pollForStatus();\n                }\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"pollForStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (_this.state.verification_status !== \"passed_database_check\" && _this.state.verification_status !== \"failed_database_check\") {\n                setTimeout(_this.pollForStatus, 5000);\n\n                _this.fetchStatus();\n              }\n\n              if (_this.state.verification_status !== STATUS_PENDING && _this.state.verification_status !== STATUS_NOT_STARTED && _this.state.verification_status !== \"verified_waiting_for_database_check\") {\n                _this.setState({\n                  loaderActive: false\n                }); //\n\n\n                if (_this.state.verification_status == \"passed_database_check\") {\n                  _this.setState({\n                    loginDetailsRecieved: true\n                  });\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              //handle error if session id isn't set\n              fetch('/api/get-verification-session/' + _this.state.verification_session_id).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return _this.setState({\n                  verification_status: data.status,\n                  sessionIdRandNum: data.randSeededNum,\n                  sessionIdMimcNum: data.mimcVal\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"mimcHashNum\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var preImage1, out;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              preImage1 = document.getElementById('mimc_num').value;\n              console.log(preImage1);\n              out = mimc(preImage1);\n              console.log(out.toString());\n\n              _this.setState({\n                mimcHashNumState: out.toString()\n              });\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyPreimage\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var preImage, hash, solidityProof;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              preImage = parseInt(document.getElementById('preImageCredential').value);\n              console.log(preImage);\n              hash = document.getElementById('mimcHashCredential').value;\n              console.log(hash);\n              _context10.next = 6;\n              return calculateProof(preImage, hash);\n\n            case 6:\n              solidityProof = _context10.sent;\n\n              _this.setState({\n                solidityVerifierProof: solidityProof\n              });\n\n              console.log(solidityProof);\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"submitSolProof\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var preImage, hash, solidityProof, fullProof, pi_a, pi_b, pi_c, inputs, accounts, res;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              // event.preventDefault();\n              _this.resetError();\n\n              _this.setState({\n                loaderActive: true\n              }); // CREATING ZKP FROM HASH AND PRE-IMAGE \n\n\n              _this.setState({\n                verification_status: \"Creating ZKP\"\n              });\n\n              preImage = parseInt(document.getElementById('preImageCredential').value);\n              console.log(preImage);\n              hash = document.getElementById('mimcHashCredential').value;\n              console.log(hash);\n              _context11.next = 9;\n              return calculateProof(preImage, hash);\n\n            case 9:\n              solidityProof = _context11.sent;\n              // this.setState({solidityVerifierProof: solidityProof});\n              console.log(solidityProof); // SUBMIT ZKP TO CONTRACT  \n\n              _this.setState({\n                verification_status: \"Starting ETH transaction\"\n              });\n\n              fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n              pi_a = fullProof[0];\n              pi_b = fullProof[1];\n              pi_c = fullProof[2];\n              inputs = fullProof[3]; // send zk proof to verifyHash function\n\n              _context11.prev = 17;\n\n              _this.setState({\n                verification_status: \"Submitting ZKP...\"\n              });\n\n              _context11.next = 21;\n              return web3.eth.getAccounts();\n\n            case 21:\n              accounts = _context11.sent;\n              _context11.next = 24;\n              return factory.methods.verifyHash(pi_a, pi_b, pi_c, inputs).send({\n                from: accounts[0]\n              });\n\n            case 24:\n              console.log(\"submitted zkp successfully\"); // Router.reload(window.location.pathname)\n\n              _context11.next = 27;\n              return factory.methods.checkIfAddressVerified().call({\n                from: accounts[0]\n              });\n\n            case 27:\n              res = _context11.sent;\n\n              _this.setState({\n                zkResult: res.toString()\n              });\n\n              setTimeout(2000); // set state of session status depending on res\n\n              if (res) {\n                _this.setState({\n                  verification_status: \"Address is verified\"\n                });\n              } else {\n                _this.setState({\n                  verification_status: \"Address verification failed\"\n                });\n              }\n\n              _context11.next = 37;\n              break;\n\n            case 33:\n              _context11.prev = 33;\n              _context11.t0 = _context11[\"catch\"](17);\n              console.log(\"error in submit sol proof\");\n\n              _this.setState({\n                errorMessage: _context11.t0.message,\n                errorTrue: true\n              });\n\n            case 37:\n              _this.setState({\n                loaderActive: false\n              });\n\n            case 38:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[17, 33]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"resetError\", function () {\n      _this.setState({\n        errorTrue: false,\n        errorMessage: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendDeposit\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var accounts, res;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _this.setState({\n                loaderActive: true\n              });\n\n              _context12.prev = 1;\n\n              _this.setState({\n                verification_status: \"Sending deposit...\"\n              });\n\n              _context12.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context12.sent;\n              _context12.next = 8;\n              return factory.methods.payDeposit().send({\n                from: accounts[0],\n                value: 20 // 20 wei deposit\n\n              });\n\n            case 8:\n              _context12.next = 10;\n              return factory.methods.checkIfDepositPayed().call({\n                from: accounts[0]\n              });\n\n            case 10:\n              res = _context12.sent;\n\n              if (res) {\n                _this.setState({\n                  verification_status: \"Deposity payed...\"\n                });\n              }\n\n              _context12.next = 18;\n              break;\n\n            case 14:\n              _context12.prev = 14;\n              _context12.t0 = _context12[\"catch\"](1);\n              console.log(\"error in submit sol proof\");\n\n              _this.setState({\n                errorMessage: _context12.t0.message,\n                errorTrue: true\n              });\n\n            case 18:\n              _this.setState({\n                loaderActive: true\n              });\n\n            case 19:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 14]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 50,\n              marginLeft: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Session status: \", this.state.verification_status, \" \\xA0 \\xA0\", this.state.loaderActive ? /*#__PURE__*/_jsxDEV(Loader, {\n                active: true,\n                inline: true,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), this.state.errorTrue ? /*#__PURE__*/_jsxDEV(Message, {\n              negative: true,\n              children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this) : null, this.state.accountAlreadyVerified ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"rgb(83, 193, 77)\"\n              },\n              children: \"***Looks like your account is already verified***\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.sendDeposit,\n              children: \"Send deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Verify your identity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.verifyIdentity,\n              children: \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), this.state.loginDetailsRecieved ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Pre-image: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PreImageButton, {\n                children: this.state.sessionIdRandNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Hash: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HashButton, {\n                children: this.state.sessionIdMimcNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No login details yet...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create and submit proof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"preImageCredential\",\n                placeholder: \"Pre-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"mimcHashCredential\",\n                placeholder: \"Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.submitSolProof,\n              children: \"Send proof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js"],"names":["React","Component","Message","Button","Input","Loader","factory","Layout","web3","loadStripe","mimc","calculateProof","PreImageButton","HashButton","stripePromise","STATUS_PENDING","STATUS_SUCCESS","STATUS_ERROR","STATUS_NOT_STARTED","CampaignIndex","errorMessage","errorTrue","loaderActive","accountAlreadyVerified","clientSecret","stripe","verification_status","verification_session_id","sessionIdRandNum","sessionIdMimcNum","loginDetailsRecieved","mimcHashNumState","solidityVerifierProof","zkResult","checkMetaMask","metaMaskPresent","checkIfAccountVerified","alreadyVerified","checkDepositPaid","paidDeposit","createNewStripeSession","eth","getAccounts","accounts","console","log","setState","methods","checkIfAddressVerified","call","from","res","checkIfDepositPayed","depositAlreadyPaid","requestOptions","method","headers","body","JSON","stringify","title","address","fetch","response","json","data","id","event","preventDefault","resetError","state","verifyIdentity","error","pollForStatus","setTimeout","fetchStatus","then","status","randSeededNum","mimcVal","preImage1","document","getElementById","value","out","toString","preImage","parseInt","hash","solidityProof","fullProof","parse","pi_a","pi_b","pi_c","inputs","verifyHash","send","message","payDeposit","marginTop","marginLeft","color","sendDeposit","submitSolProof"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,MAAjC,QAA+C,mBAA/C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CACA;;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,aAAa,GAAGL,UAAU,CAAC,6GAAD,CAAhC;AAEA,IAAMM,cAAc,GAAG,YAAvB;AACA,IAAMC,cAAc,GAAG,UAAvB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,kBAAkB,GAAG,eAA3B;;IAEMC,a;;;;;;;;;;;;;;;;4DAEK;AACPC,MAAAA,YAAY,EAAE,EADP;AAEPC,MAAAA,SAAS,EAAE,KAFJ;AAGPC,MAAAA,YAAY,EAAE,KAHP;AAIPC,MAAAA,sBAAsB,EAAE,KAJjB;AAKP;AACAC,MAAAA,YAAY,EAAE,IANP;AAOPC,MAAAA,MAAM,EAAE,IAPD;AAQPC,MAAAA,mBAAmB,EAAER,kBARd;AASPS,MAAAA,uBAAuB,EAAE,IATlB;AAUPC,MAAAA,gBAAgB,EAAE,IAVX;AAWPC,MAAAA,gBAAgB,EAAE,IAXX;AAYP;AACAC,MAAAA,oBAAoB,EAAE,KAbf;AAcP;AACAC,MAAAA,gBAAgB,EAAC,IAfV;AAgBPC,MAAAA,qBAAqB,EAAC,IAhBf;AAiBPC,MAAAA,QAAQ,EAAE;AAjBH,K;;8IAoBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEY,MAAKC,aAAL,EAFZ;;AAAA;AAEZC,cAAAA,eAFY;;AAAA,kBAGdA,eAHc;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAOY,MAAKC,sBAAL,EAPZ;;AAAA;AAOZC,cAAAA,eAPY;AAAA;AAAA,qBAUQ,MAAKC,gBAAL,EAVR;;AAAA;AAUZC,cAAAA,WAVY;AAAA;AAAA,qBAcZ,MAAKC,sBAAL,EAdY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;0IAmBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEWhC,IAAI,CAACiC,GAAL,CAASC,WAAT,EAFX;;AAAA;AAENC,cAAAA,QAFM;AAAA,gDAGL,IAHK;;AAAA;AAAA;AAAA;AAMVC,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,oBAAKC,QAAL,CAAc;AACZ1B,gBAAAA,YAAY,EAAE,0FADF;AAEZC,gBAAAA,SAAS,EAAE;AAFC,eAAd;;AAPU,gDAUH,KAVG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mJAcS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEb,IAAI,CAACiC,GAAL,CAASC,WAAT,EAFF;;AAAA;AAEfC,cAAAA,QAFe;AAAA;AAAA,qBAGLrC,OAAO,CAACyC,OAAR,CACbC,sBADa,GAEbC,IAFa,CAER;AACFC,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,eAFQ,CAHK;;AAAA;AAGjBQ,cAAAA,GAHiB;;AAQrB,oBAAKL,QAAL,CAAc;AAACvB,gBAAAA,sBAAsB,EAAE4B;AAAzB,eAAd;;AARqB,gDASd,IATc;;AAAA;AAAA;AAAA;AAYnBP,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,oBAAKC,QAAL,CAAc;AACZ1B,gBAAAA,YAAY,EAAE,wDADF;AAEZC,gBAAAA,SAAS,EAAE;AAFC,eAAd;;AAbmB,gDAgBZ,KAhBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;6IAoBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQb,IAAI,CAACiC,GAAL,CAASC,WAAT,EAFR;;AAAA;AAETC,cAAAA,QAFS;AAAA;AAAA,qBAGCrC,OAAO,CAACyC,OAAR,CACbK,mBADa,GAEbH,IAFa,CAER;AACFC,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,eAFQ,CAHD;;AAAA;AAGXQ,cAAAA,GAHW;;AAQf,oBAAKL,QAAL,CAAc;AAACO,gBAAAA,kBAAkB,EAAEF;AAArB,eAAd;;AARe,gDASRA,GATQ;;AAAA;AAAA;AAAA;AAYbP,cAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AACA,oBAAKC,QAAL,CAAc;AACZ1B,gBAAAA,YAAY,EAAE,uEADF;AAEZC,gBAAAA,SAAS,EAAE;AAFC,eAAd;;AAba,gDAgBN,KAhBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mJAoBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEb,IAAI,CAACiC,GAAL,CAASC,WAAT,EAFF;;AAAA;AAEfC,cAAAA,QAFe;AAIfW,cAAAA,cAJe,GAIE;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAFY;AAGrBC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,kBAAAA,KAAK,EAAE,0BAAT;AAAoCC,kBAAAA,OAAO,EAAElB,QAAQ,CAAC,CAAD;AAArD,iBAAf;AAHe,eAJF;AAAA;AAAA,qBASEmB,KAAK,CAAC,kCAAD,EAAqCR,cAArC,CATP;;AAAA;AASfS,cAAAA,QATe;AAAA;AAAA,qBAUFA,QAAQ,CAACC,IAAT,EAVE;;AAAA;AAUfC,cAAAA,IAVe;;AAWrB,oBAAKnB,QAAL,CAAc;AAACtB,gBAAAA,YAAY,EAAEyC,IAAI,CAACzC,YAApB;AAAkCG,gBAAAA,uBAAuB,EAAEsC,IAAI,CAACC;AAAhE,eAAd,EAXqB,CAarB;AACA;AACA;;;AAfqB;AAAA;AAAA,qBAiBSpD,aAjBT;;AAAA;AAAA;AAAA;AAiBLW,gBAAAA,MAjBK;AAAA;;AAAA,2BAiBhBqB,QAjBgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBrBF,cAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;;AACA,oBAAKC,QAAL,CAAc;AACZ1B,gBAAAA,YAAY,EAAE,sEADF;AAEZC,gBAAAA,SAAS,EAAE;AAFC,eAAd;;AApBqB,gDAuBd,KAvBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;2EA6BR,kBAAO8C,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfA,gBAAAA,KAAK,CAACC,cAAN;;AAEA,sBAAKC,UAAL;;AACA,sBAAKvB,QAAL,CAAc;AAAExB,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;AAJe,8BAMgB,MAAKgD,KANrB,EAMT7C,MANS,eAMTA,MANS,EAMDD,YANC,eAMDA,YANC;;AAAA,sBAQX,CAACC,MAAD,IAAW,CAACD,YARD;AAAA;AAAA;AAAA;;AASb,sBAAKsB,QAAL,CAAc;AAAExB,kBAAAA,YAAY,EAAE,KAAhB;AAAuBD,kBAAAA,SAAS,EAAE,IAAlC;AAAwCD,kBAAAA,YAAY,EAAE;AAAtD,iBAAd;;AATa;;AAAA;AAAA;AAAA,uBAcSK,MAAM,CAAC8C,cAAP,CAAsB/C,YAAtB,CAdT;;AAAA;AAAA;AAcPgD,gBAAAA,KAdO,yBAcPA,KAdO;;AAgBf,oBAAIA,KAAJ,EAAW;AACT5B,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB2B,KAAvB;AACD,iBAFD,MAEO;AACL5B,kBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,wBAAK4B,aAAL;AACD;;AArBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;0IAyBD;AAAA;AAAA;AAAA;AAAA;AAEd,kBAAG,MAAKH,KAAL,CAAW5C,mBAAX,KAAmC,uBAAnC,IAA8D,MAAK4C,KAAL,CAAW5C,mBAAX,KAAmC,uBAApG,EAA6H;AAC3HgD,gBAAAA,UAAU,CAAC,MAAKD,aAAN,EAAqB,IAArB,CAAV;;AACA,sBAAKE,WAAL;AACD;;AACD,kBAAG,MAAKL,KAAL,CAAW5C,mBAAX,KAAmCX,cAAnC,IACC,MAAKuD,KAAL,CAAW5C,mBAAX,KAAmCR,kBADpC,IAEC,MAAKoD,KAAL,CAAW5C,mBAAX,KAAmC,qCAFvC,EAGI;AACE,sBAAKoB,QAAL,CAAc;AAAExB,kBAAAA,YAAY,EAAE;AAAhB,iBAAd,EADF,CAEE;;;AACA,oBAAG,MAAKgD,KAAL,CAAW5C,mBAAX,IAAkC,uBAArC,EAA8D;AAC5D,wBAAKoB,QAAL,CAAc;AAAChB,oBAAAA,oBAAoB,EAAE;AAAvB,mBAAd;AACH;AACJ;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;wIAmBF;AAAA;AAAA;AAAA;AAAA;AACZ;AACAgC,cAAAA,KAAK,CAAC,mCAAmC,MAAKQ,KAAL,CAAW3C,uBAA/C,CAAL,CACGiD,IADH,CACQ,UAAAzB,GAAG;AAAA,uBAAIA,GAAG,CAACa,IAAJ,EAAJ;AAAA,eADX,EAEGY,IAFH,CAEQ,UAAAX,IAAI;AAAA,uBAAI,MAAKnB,QAAL,CAAc;AAC1BpB,kBAAAA,mBAAmB,EAAEuC,IAAI,CAACY,MADA;AAE1BjD,kBAAAA,gBAAgB,EAAEqC,IAAI,CAACa,aAFG;AAG1BjD,kBAAAA,gBAAgB,EAAEoC,IAAI,CAACc;AAHG,iBAAd,CAAJ;AAAA,eAFZ;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;wIAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,SADO,GACKC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KADzC;AAEbvC,cAAAA,OAAO,CAACC,GAAR,CAAYmC,SAAZ;AACMI,cAAAA,GAHO,GAGD1E,IAAI,CAACsE,SAAD,CAHH;AAIbpC,cAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAG,CAACC,QAAJ,EAAZ;;AACA,oBAAKvC,QAAL,CAAc;AAACf,gBAAAA,gBAAgB,EAAEqD,GAAG,CAACC,QAAJ;AAAnB,eAAd;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;2IASG;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,QADS,GACEC,QAAQ,CAACN,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAA/C,CADV;AAEfvC,cAAAA,OAAO,CAACC,GAAR,CAAYyC,QAAZ;AACME,cAAAA,IAHS,GAGFP,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAH5C;AAIfvC,cAAAA,OAAO,CAACC,GAAR,CAAY2C,IAAZ;AAJe;AAAA,qBAKa7E,cAAc,CAAC2E,QAAD,EAAWE,IAAX,CAL3B;;AAAA;AAKTC,cAAAA,aALS;;AAMf,oBAAK3C,QAAL,CAAc;AAACd,gBAAAA,qBAAqB,EAAEyD;AAAxB,eAAd;;AACA7C,cAAAA,OAAO,CAACC,GAAR,CAAY4C,aAAZ;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;2IAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACf;AACA,oBAAKpB,UAAL;;AACA,oBAAKvB,QAAL,CAAc;AAAExB,gBAAAA,YAAY,EAAE;AAAhB,eAAd,EAHe,CAKf;;;AACA,oBAAKwB,QAAL,CAAc;AAACpB,gBAAAA,mBAAmB,EAAE;AAAtB,eAAd;;AACM4D,cAAAA,QAPS,GAOEC,QAAQ,CAACN,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAA/C,CAPV;AAQfvC,cAAAA,OAAO,CAACC,GAAR,CAAYyC,QAAZ;AACME,cAAAA,IATS,GASFP,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAT5C;AAUfvC,cAAAA,OAAO,CAACC,GAAR,CAAY2C,IAAZ;AAVe;AAAA,qBAWa7E,cAAc,CAAC2E,QAAD,EAAWE,IAAX,CAX3B;;AAAA;AAWTC,cAAAA,aAXS;AAYf;AACA7C,cAAAA,OAAO,CAACC,GAAR,CAAY4C,aAAZ,EAbe,CAef;;AACA,oBAAK3C,QAAL,CAAc;AAACpB,gBAAAA,mBAAmB,EAAE;AAAtB,eAAd;;AAEMgE,cAAAA,SAlBS,GAkBGhC,IAAI,CAACiC,KAAL,CAAW,MAAMF,aAAN,GAAsB,GAAjC,CAlBH;AAoBTG,cAAAA,IApBS,GAoBFF,SAAS,CAAC,CAAD,CApBP;AAqBTG,cAAAA,IArBS,GAqBFH,SAAS,CAAC,CAAD,CArBP;AAsBTI,cAAAA,IAtBS,GAsBFJ,SAAS,CAAC,CAAD,CAtBP;AAuBTK,cAAAA,MAvBS,GAuBAL,SAAS,CAAC,CAAD,CAvBT,EA0Bf;;AA1Be;;AA4BX,oBAAK5C,QAAL,CAAc;AAACpB,gBAAAA,mBAAmB,EAAE;AAAtB,eAAd;;AA5BW;AAAA,qBA6BYlB,IAAI,CAACiC,GAAL,CAASC,WAAT,EA7BZ;;AAAA;AA6BLC,cAAAA,QA7BK;AAAA;AAAA,qBA8BLrC,OAAO,CAACyC,OAAR,CACDiD,UADC,CACUJ,IADV,EACeC,IADf,EACoBC,IADpB,EACyBC,MADzB,EAEDE,IAFC,CAEI;AACF/C,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,eAFJ,CA9BK;;AAAA;AAoCXC,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EApCW,CAqCX;;AArCW;AAAA,qBAuCKvC,OAAO,CAACyC,OAAR,CACXC,sBADW,GAEXC,IAFW,CAEN;AACFC,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,eAFM,CAvCL;;AAAA;AAuCPQ,cAAAA,GAvCO;;AA4CX,oBAAKL,QAAL,CAAc;AAACb,gBAAAA,QAAQ,EAAEkB,GAAG,CAACkC,QAAJ;AAAX,eAAd;;AAEAX,cAAAA,UAAU,CAAC,IAAD,CAAV,CA9CW,CAgDX;;AACA,kBAAGvB,GAAH,EAAQ;AACN,sBAAKL,QAAL,CAAc;AAACpB,kBAAAA,mBAAmB,EAAE;AAAtB,iBAAd;AACD,eAFD,MAEO;AACL,sBAAKoB,QAAL,CAAc;AAACpB,kBAAAA,mBAAmB,EAAE;AAAtB,iBAAd;AACD;;AArDU;AAAA;;AAAA;AAAA;AAAA;AAyDXkB,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,oBAAKC,QAAL,CAAc;AAAE1B,gBAAAA,YAAY,EAAE,cAAI8E,OAApB;AAA6B7E,gBAAAA,SAAS,EAAE;AAAxC,eAAd;;AA1DW;AA6Df,oBAAKyB,QAAL,CAAc;AAACxB,gBAAAA,YAAY,EAAE;AAAf,eAAd;;AA7De;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;iEAiEJ,YAAM;AACjB,YAAKwB,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE,KAAZ;AAAmBD,QAAAA,YAAY,EAAE;AAAjC,OAAd;AACD,K;;wIAEa;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,oBAAK0B,QAAL,CAAc;AAAExB,gBAAAA,YAAY,EAAE;AAAhB,eAAd;;AADY;;AAIV,oBAAKwB,QAAL,CAAc;AAACpB,gBAAAA,mBAAmB,EAAE;AAAtB,eAAd;;AAJU;AAAA,qBAKalB,IAAI,CAACiC,GAAL,CAASC,WAAT,EALb;;AAAA;AAKJC,cAAAA,QALI;AAAA;AAAA,qBAMJrC,OAAO,CAACyC,OAAR,CACDoD,UADC,GAEDF,IAFC,CAEI;AACF/C,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD,CADZ;AAEFwC,gBAAAA,KAAK,EAAE,EAFL,CAEQ;;AAFR,eAFJ,CANI;;AAAA;AAAA;AAAA,qBAaM7E,OAAO,CAACyC,OAAR,CACXK,mBADW,GAEXH,IAFW,CAEN;AACFC,gBAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,eAFM,CAbN;;AAAA;AAaNQ,cAAAA,GAbM;;AAmBV,kBAAIA,GAAJ,EAAS;AACL,sBAAKL,QAAL,CAAc;AAACpB,kBAAAA,mBAAmB,EAAE;AAAtB,iBAAd;AACH;;AArBS;AAAA;;AAAA;AAAA;AAAA;AAuBRkB,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,oBAAKC,QAAL,CAAc;AAAE1B,gBAAAA,YAAY,EAAE,cAAI8E,OAApB;AAA6B7E,gBAAAA,SAAS,EAAE;AAAxC,eAAd;;AAxBQ;AA0Bd,oBAAKyB,QAAL,CAAc;AAAExB,gBAAAA,YAAY,EAAE;AAAhB,eAAd;;AA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BA8BH;AACP,0BACI,QAAC,MAAD;AAAA,+BACI;AAAA,iCACE;AAAK,YAAA,KAAK,EAAE;AAAC8E,cAAAA,SAAS,EAAE,EAAZ;AAAgBC,cAAAA,UAAU,EAAE;AAA5B,aAAZ;AAAA,oCAGE;AAAA,6CAAqB,KAAK/B,KAAL,CAAW5C,mBAAhC,gBAEE,KAAK4C,KAAL,CAAWhD,YAAX,gBACA,QAAC,MAAD;AAAQ,gBAAA,MAAM,MAAd;AAAe,gBAAA,MAAM,MAArB;AAAsB,gBAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBADA,GACuC,IAHzC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAUE,KAAKgD,KAAL,CAAWjD,SAAX,gBACA,QAAC,OAAD;AAAS,cAAA,QAAQ,MAAjB;AAAA,sCACE,QAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAI,KAAKiD,KAAL,CAAWlD;AAAf;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,GAIa,IAdf,EAiBI,KAAKkD,KAAL,CAAW/C,sBAAX,gBACA;AAAI,cAAA,KAAK,EAAE;AAAC+E,gBAAAA,KAAK,EAAC;AAAP,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,GACgG,IAlBpG,eAqBE;AAAA;AAAA;AAAA;AAAA,oBArBF,eAsBE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eA0BE,QAAC,MAAD;AAAQ,cAAA,OAAO,MAAf;AAAgB,cAAA,OAAO,EAAE,KAAKhC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BF,eA4BE;AAAA;AAAA;AAAA;AAAA,oBA5BF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BF,EAiCE,KAAKD,KAAL,CAAWxC,oBAAX,gBACE;AAAA,sCACE;AAAA,4DAAsB;AAAA;AAAA;AAAA;AAAA,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,cAAD;AAAA,0BAAiB,KAAKwC,KAAL,CAAW1C;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAFF,eAIE;AAAA,uDAAiB;AAAA;AAAA;AAAA;AAAA,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,UAAD;AAAA,0BAAa,KAAK0C,KAAL,CAAWzC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,gBAQW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzCb,eA4CE;AAAA;AAAA;AAAA;AAAA,oBA5CF,eA8CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF,eA+CE;AAAA,qCAAG,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,oBAAV;AAA+B,gBAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBA/CF,eAgDE;AAAA,qCAAG,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,oBAAV;AAA+B,gBAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAhDF,eAiDE,QAAC,MAAD;AAAQ,cAAA,OAAO,MAAf;AAAgB,cAAA,OAAO,EAAE,KAAK2E,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AA0DD;;;;EApWyBvG,S;;AAuW5B,eAAekB,aAAf","sourcesContent":["// require('dotenv').config();\n\nimport React, { Component } from \"react\";\nimport { Message, Button, Input, Loader } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\n\nimport Layout from \"../components/Layout\";\nimport web3 from '../ethereum/web3'\n// import { Router } from '../routes';\nimport {loadStripe} from '@stripe/stripe-js';\nimport mimc from '../public/mimc.ts';\n\nimport { calculateProof } from '../public/prover.js'\n\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\n\nconst stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\n\nconst STATUS_PENDING = \"processing\"\nconst STATUS_SUCCESS = \"verified\";\nconst STATUS_ERROR = \"?\"\nconst STATUS_NOT_STARTED = \"not_submitted\";\n\nclass CampaignIndex extends Component {\n \n   state = {\n    errorMessage: '',\n    errorTrue: false,\n    loaderActive: false,\n    accountAlreadyVerified: false,\n    // stripe\n    clientSecret: null,\n    stripe: null,\n    verification_status: STATUS_NOT_STARTED,\n    verification_session_id: null,\n    sessionIdRandNum: null,\n    sessionIdMimcNum: null,\n    //login\n    loginDetailsRecieved: false,\n    //zkp\n    mimcHashNumState:null,\n    solidityVerifierProof:null,\n    zkResult: null,\n  };  \n\n  componentDidMount = async () => {\n    // check if metamask installed\n    const metaMaskPresent = await this.checkMetaMask();\n    if(!metaMaskPresent) {return;}\n\n    // checking if account is already verified\n    // at the moment I haven't disabled rest of flow if already verified to make testing easier\n    const alreadyVerified = await this.checkIfAccountVerified();\n\n    // check if deposit is paid\n    const paidDeposit = await this.checkDepositPaid();\n    // if(!paidDeposit) {return;} // this should be live for actual flow\n    \n    // fetching new stripe sesion\n    await this.createNewStripeSession()\n\n\n  }\n\n  checkMetaMask = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      return true;\n\n    } catch (err) {\n        console.log(\"MetaMask error\")\n        this.setState({ \n          errorMessage: \"It looks like you don't have metamask up and running, which you need to use this service\", \n          errorTrue: true });\n        return false;\n    }\n  }\n\n  checkIfAccountVerified = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      let res = await factory.methods\n        .checkIfAddressVerified()\n        .call({\n            from: accounts[0]\n      });\n      this.setState({accountAlreadyVerified: res});\n      return true;\n\n    } catch (err) {\n        console.log(\"MetMask aerror\")\n        this.setState({ \n          errorMessage: \"It looks like you may be on the wrong MetaMask network\", \n          errorTrue: true });\n        return false;\n    }\n  }\n\n  checkDepositPaid = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      let res = await factory.methods\n        .checkIfDepositPayed()\n        .call({\n            from: accounts[0]\n      });\n      this.setState({depositAlreadyPaid: res});\n      return res;\n\n    } catch (err) {\n        console.log(\"error when initially checking account\")\n        this.setState({ \n          errorMessage: \"It looks like there was an error checking if you had paid the deposit\", \n          errorTrue: true });\n        return false;\n    } \n  }\n\n  createNewStripeSession = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: 'POST of metamask address',address: accounts[0] })\n      };\n      const response = await fetch('/api/create-verification-session', requestOptions);\n      const data = await response.json();\n      this.setState({clientSecret: data.clientSecret, verification_session_id: data.id})\n\n      // fetch('/api/create-verification-session')\n      // .then(res => res.json())\n      // .then(data => this.setState({clientSecret: data.clientSecret, verification_session_id: data.id}))\n\n      this.setState({ stripe: await stripePromise })\n    } catch (err) {\n      console.log(\"error when trying to create new verification session\")\n      this.setState({ \n        errorMessage: \"It looks like there was an issue creating a new verification session\", \n        errorTrue: true });\n      return false;\n    }\n\n  }\n\n\n  verifyIdentity = async (event) => {\n    event.preventDefault();\n\n    this.resetError()\n    this.setState({ loaderActive: true});\n\n    let { stripe, clientSecret } = this.state;\n    \n    if (!stripe || !clientSecret) {\n      this.setState({ loaderActive: false, errorTrue: true, errorMessage: \"Stripe not connecting\"});\n      return;\n    }\n\n    // Show the verification modal.\n    const { error } = await stripe.verifyIdentity(clientSecret);\n    \n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('Verification submitted!');\n      this.pollForStatus();\n    }\n\n  }\n\n  pollForStatus = async() => {\n\n    if(this.state.verification_status !== \"passed_database_check\" && this.state.verification_status !== \"failed_database_check\") {\n      setTimeout(this.pollForStatus, 5000)\n      this.fetchStatus()\n    }\n    if(this.state.verification_status !== STATUS_PENDING && \n        this.state.verification_status !== STATUS_NOT_STARTED && \n        this.state.verification_status !== \"verified_waiting_for_database_check\") \n        {\n          this.setState({ loaderActive: false});\n          //\n          if(this.state.verification_status == \"passed_database_check\") {\n            this.setState({loginDetailsRecieved: true});\n        }\n    }\n\n  }\n\n  fetchStatus = async () => {\n    //handle error if session id isn't set\n    fetch('/api/get-verification-session/' + this.state.verification_session_id)\n      .then(res => res.json())\n      .then(data => this.setState({\n        verification_status: data.status, \n        sessionIdRandNum: data.randSeededNum,\n        sessionIdMimcNum: data.mimcVal,\n      }))\n  }\n\nmimcHashNum = async () => {\n const preImage1 = document.getElementById('mimc_num').value\n console.log(preImage1)\n const out = mimc(preImage1);\n console.log(out.toString())\n this.setState({mimcHashNumState: out.toString()});\n\n}\n\nverifyPreimage = async() => {\n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n}\n\nsubmitSolProof = async () => {\n  // event.preventDefault();\n  this.resetError()\n  this.setState({ loaderActive: true});\n\n  // CREATING ZKP FROM HASH AND PRE-IMAGE \n  this.setState({verification_status: \"Creating ZKP\"})\n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  // this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n\n  // SUBMIT ZKP TO CONTRACT  \n  this.setState({verification_status: \"Starting ETH transaction\"})\n\n  const fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n\n  const pi_a = fullProof[0]\n  const pi_b = fullProof[1]\n  const pi_c = fullProof[2]\n  const inputs = fullProof[3]\n  \n\n  // send zk proof to verifyHash function\n  try {\n      this.setState({verification_status: \"Submitting ZKP...\"})\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n          .verifyHash(pi_a,pi_b,pi_c,inputs)\n          .send({\n              from: accounts[0]\n      });\n      \n      console.log(\"submitted zkp successfully\")\n      // Router.reload(window.location.pathname)\n\n      let res = await factory.methods\n          .checkIfAddressVerified()\n          .call({\n              from: accounts[0]\n      });\n      this.setState({zkResult: res.toString()});\n\n      setTimeout(2000);\n\n      // set state of session status depending on res\n      if(res) {\n        this.setState({verification_status: \"Address is verified\"})\n      } else {\n        this.setState({verification_status: \"Address verification failed\"})\n      }\n\n\n  } catch (err) {\n      console.log(\"error in submit sol proof\")\n      this.setState({ errorMessage: err.message, errorTrue: true });\n  }\n\n  this.setState({loaderActive: false});\n}\n\n\nresetError = () => {\n  this.setState({errorTrue: false, errorMessage: \"\"});\n}\n\nsendDeposit = async () => {\n  this.setState({ loaderActive: true});\n\n  try {\n    this.setState({verification_status: \"Sending deposit...\"})\n    const accounts = await web3.eth.getAccounts();\n    await factory.methods\n        .payDeposit()\n        .send({\n            from: accounts[0],\n            value: 20 // 20 wei deposit\n    });\n\n    let res = await factory.methods\n        .checkIfDepositPayed()\n        .call({\n            from: accounts[0]\n    });\n    \n    if (res) {\n        this.setState({verification_status: \"Deposity payed...\"})\n    }\n  } catch (err) {\n      console.log(\"error in submit sol proof\")\n      this.setState({ errorMessage: err.message, errorTrue: true });\n  }\nthis.setState({ loaderActive: true});\n\n}\n\n  render() {\n    return (\n        <Layout >\n            <div>\n              <div style={{marginTop: 50, marginLeft: 200}}>\n\n                {/* --------------------SESSION STATUS--------------------- */}\n                <h2>Session status: {this.state.verification_status} &nbsp; &nbsp;\n                {\n                  this.state.loaderActive ?\n                  <Loader active inline size=\"small\" />: null\n                }\n                </h2>\n                {\n                this.state.errorTrue ?\n                <Message negative>\n                  <Message.Header>Error</Message.Header>\n                  <p>{this.state.errorMessage}</p>\n                </Message> : null\n                }\n                {\n                  this.state.accountAlreadyVerified ?\n                  <h3 style={{color:\"rgb(83, 193, 77)\"}}>***Looks like your account is already verified***</h3> : null\n                }\n                \n                <hr/>   \n                <Button onClick={this.sendDeposit}>Send deposit</Button> \n                <hr/>            \n                {/* --------------------VERIFY IDENTITY--------------------- */}\n                <h2>Verify your identity</h2>\n                <Button primary onClick={this.verifyIdentity}>Verify</Button>\n\n                <hr/>\n                \n                {/* --------------------LOGIN CREDENTIALS--------------------- */}\n                <h2>Login credentials</h2>\n                {\n                this.state.loginDetailsRecieved ?\n                  <div>\n                    <h3>Pre-image: &nbsp; <br></br> </h3> \n                    <PreImageButton>{this.state.sessionIdRandNum}</PreImageButton>\n                \n                    <h3>Hash: &nbsp; <br></br></h3>\n                    <HashButton>{this.state.sessionIdMimcNum}</HashButton>\n\n                  </div> : <h4>No login details yet...</h4>\n                }\n                                \n                <hr/>\n                {/* ---------------------SUBMIT PROOF---------------------- */}\n                <h2>Create and submit proof</h2>\n                <p><Input id=\"preImageCredential\" placeholder=\"Pre-image\"></Input></p>\n                <p><Input id=\"mimcHashCredential\" placeholder=\"Hash\"></Input></p>\n                <Button primary onClick={this.submitSolProof} >Send proof</Button> \n\n            </div>\n            </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\"; // let web3;\n// if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n//   // We are in the browser and metamask is running.\n//   window.ethereum.request({ method: \"eth_requestAccounts\" });\n//   web3 = new Web3(window.ethereum);\n// } else {\n//   // We are on the server *OR* the user is not running metamask\n//   const provider = new Web3.providers.HttpProvider(\n//     \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n//   );\n//   web3 = new Web3(provider);\n// }\n// export default web3;\n\nvar web3Call = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var web3, provider;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (true && typeof window.ethereum !== \"undefined\") {\n              // We are in the browser and metamask is running.\n              window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n              web3 = new Web3(window.ethereum);\n            } else {\n              // We are on the server *OR* the user is not running metamask\n              provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n              web3 = new Web3(provider);\n            }\n\n            return _context.abrupt(\"return\", web3);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function web3Call() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default web3Call;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/ethereum/web3.js"],"names":["Web3","web3Call","window","ethereum","request","method","web3","provider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMC,QAAQ;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAGf,gBAAI,QAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3E;AACAD,cAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAxB;AACAC,cAAAA,IAAI,GAAG,IAAIN,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAP;AACD,aAJD,MAIO;AACL;AACMI,cAAAA,QAFD,GAEY,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,CACf,+DADe,CAFZ;AAKLH,cAAAA,IAAI,GAAG,IAAIN,IAAJ,CAASO,QAAT,CAAP;AACD;;AAbc,6CAcRD,IAdQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARL,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAiBA,eAAeA,QAAf","sourcesContent":["import Web3 from \"web3\";\n\n// let web3;\n\n// if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n//   // We are in the browser and metamask is running.\n//   window.ethereum.request({ method: \"eth_requestAccounts\" });\n//   web3 = new Web3(window.ethereum);\n// } else {\n//   // We are on the server *OR* the user is not running metamask\n//   const provider = new Web3.providers.HttpProvider(\n//     \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n//   );\n//   web3 = new Web3(provider);\n// }\n\n// export default web3;\n\nconst web3Call = async () => {\n  let web3;\n\n  if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n    // We are in the browser and metamask is running.\n    window.ethereum.request({ method: \"eth_requestAccounts\" });\n    web3 = new Web3(window.ethereum);\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n      \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n    );\n    web3 = new Web3(provider);\n  }\n  return web3\n}\n\nexport default web3Call;"]},"metadata":{},"sourceType":"module"}
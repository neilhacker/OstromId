{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Router } from '../routes'; // import web3 from '../ethereum/web3' // use this to automatically scan for metamask\n\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\n\nvar web3;\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorTrue: false,\n      errorMessage: \"\",\n      accountAlreadyVerified: false,\n      account: \"No account\",\n      network: \"No network\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.connectMetaMaskAccountInitialCheck();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectMetaMaskAccountInitialCheck\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var address, network, net, provider;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(true && typeof window.ethereum !== \"undefined\")) {\n                _context2.next = 12;\n                break;\n              }\n\n              // We are in the browser and metamask is running.\n              web3 = new Web3(window.ethereum); // let stuff = await web3.eth.getAccounts()\n              // console.log(\"stuff\", stuff)\n\n              _context2.next = 4;\n              return ethereum.selectedAddress;\n\n            case 4:\n              address = _context2.sent;\n              network = ethereum.networkVersion;\n              console.log(\"account\", address);\n              console.log(\"network\", network);\n              net = _this.networkIntToName(network);\n\n              _this.setState({\n                network: net,\n                account: address\n              });\n\n              _context2.next = 13;\n              break;\n\n            case 12:\n              // We are on the server *OR* the user is not running metamask\n              provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectMetaMaskAccount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var address, network, net, provider;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(true && typeof window.ethereum !== \"undefined\")) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 3;\n              return window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 3:\n              web3 = new Web3(window.ethereum); // let stuff = await web3.eth.getAccounts()\n              // console.log(\"stuff\", stuff)\n\n              _context3.next = 6;\n              return ethereum.selectedAddress;\n\n            case 6:\n              address = _context3.sent;\n              network = ethereum.networkVersion;\n              console.log(\"account\", address);\n              console.log(\"network\", network);\n              net = _this.networkIntToName(network);\n\n              _this.setState({\n                network: net,\n                account: address\n              });\n\n              _context3.next = 15;\n              break;\n\n            case 14:\n              // We are on the server *OR* the user is not running metamask\n              provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"networkIntToName\", function (networkId) {\n      switch (networkId) {\n        case \"1\":\n          return \"Main\";\n\n        case \"3\":\n          return \"Ropsten\";\n\n        case \"4\":\n          return \"Rinkeby\";\n\n        case \"42\":\n          return \"Kovan\";\n\n        case \"5\":\n          return \"Goerli\";\n\n        default:\n          return \"Custom\";\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 100,\n              marginLeft: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.connectMetaMaskAccount,\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: \"black\",\n                backgroundColor: \"#f9f4f4\",\n                width: \"fit-content\",\n                padding: \"1.5%\",\n                borderRadius: \"12px\",\n                \"float\": \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: \"#F4C458\",\n                  backgroundColor: \"#f9f4f4\",\n                  width: \"fit-content\",\n                  padding: \"1.5%\",\n                  borderRadius: \"12px\",\n                  \"float\": \"left\"\n                },\n                children: this.state.network\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), this.state.account]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js"],"names":["React","Component","Button","Icon","Dimmer","Layout","Router","Web3","web3","CampaignIndex","errorTrue","errorMessage","accountAlreadyVerified","account","network","connectMetaMaskAccountInitialCheck","window","ethereum","selectedAddress","address","networkVersion","console","log","net","networkIntToName","setState","provider","providers","HttpProvider","request","method","networkId","marginTop","marginLeft","connectMetaMaskAccount","color","backgroundColor","width","padding","borderRadius","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Router } from '../routes';\n\n// import web3 from '../ethereum/web3' // use this to automatically scan for metamask\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\nlet web3; \n\nclass CampaignIndex extends Component {\n  state = {\n    errorTrue: false,\n    errorMessage: \"\",\n    accountAlreadyVerified: false,\n    account: \"No account\",\n    network: \"No network\",\n\n  }\n \n  componentDidMount = async () => {\n    await this.connectMetaMaskAccountInitialCheck();\n\n  }\n\n  // componentDidUpdate = async () => {\n  //   this.checkMetaMask();\n\n  // }\n    \n  connectMetaMaskAccountInitialCheck = async () => {\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      \n      web3 = new Web3(window.ethereum);\n\n      // let stuff = await web3.eth.getAccounts()\n      // console.log(\"stuff\", stuff)\n\n      var address = await ethereum.selectedAddress;\n      var network = ethereum.networkVersion;\n\n      console.log(\"account\", address)\n      console.log(\"network\", network)\n\n      const net = this.networkIntToName(network)\n\n      this.setState({network: net, account: address})\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n  }\n  \n  connectMetaMaskAccount = async () => {\n    // let web3;\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      \n      web3 = new Web3(window.ethereum);\n\n      // let stuff = await web3.eth.getAccounts()\n      // console.log(\"stuff\", stuff)\n\n      var address = await ethereum.selectedAddress;\n      var network = ethereum.networkVersion;\n\n      console.log(\"account\", address)\n      console.log(\"network\", network)\n\n      const net = this.networkIntToName(network)\n\n      this.setState({network: net, account: address})\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n  }\n\n  networkIntToName = (networkId) => {\n    switch(networkId) {\n      case \"1\":\n          return \"Main\"\n      case \"3\":\n        return \"Ropsten\"\n      case \"4\":\n        return \"Rinkeby\"\n      case \"42\":\n        return \"Kovan\";\n      case \"5\":\n        return \"Goerli\";\n      default: \n        return \"Custom\";\n    }\n}\n\n  render() {\n\n    return (\n        <Layout>\n          <div>\n          <div style={{marginTop: 100, marginLeft: 200}}>\n\n          <button onClick={this.connectMetaMaskAccount}>Connect Wallet</button> \n          <br></br>\n          <br></br>\n          {/* <div>\n          <h4 style={{color: \"#F4C458\",\n                    backgroundColor: \"#f9f4f4\",\n                    width: \"fit-content\",\n                    padding: \"1.5%\",\n                    borderRadius: \"12px\",\n                    float:\"left\",\n                    }}>\n            {this.state.network}\n          </h4>   \n          </div> */}\n          <h4 style={{color: \"black\",\n                    backgroundColor: \"#f9f4f4\",\n                    width: \"fit-content\",\n                    padding: \"1.5%\",\n                    borderRadius: \"12px\",\n                    float:\"right\",\n                    }}>\n           \n            <h4 style={{color: \"#F4C458\",\n                    backgroundColor: \"#f9f4f4\",\n                    width: \"fit-content\",\n                    padding: \"1.5%\",\n                    borderRadius: \"12px\",\n                    float:\"left\",\n                    }}>\n            {this.state.network}\n          </h4>   \n         \n            {this.state.account}\n          </h4>   \n               \n          </div>\n          </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
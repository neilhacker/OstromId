{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/MessageDis.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import { useState, useEffect } from 'react'\n// import { Message } from 'semantic-ui-react'\n// const MessageDis = ({ variant, children }) => {\n//   const [show, setShow] = useState(true)\n//   // const [show] = useState({children})\n//   // On componentDidMount set the timer\n//   useEffect(() => {\n//     const timeId = setTimeout(() => {\n//       // After 3 seconds set the show value to false\n//       setShow(false)\n//     }, 3000)\n//     return () => {\n//       clearTimeout(timeId)\n//     }\n//   }, []);\n//   // If show is false the component will return null and stop here\n//   if (!show) {\n//     return null;\n//   }\n//   // If show is true this will be returned\n//   return (\n//     <div className={`alert alert-${variant}`}>\n//       <Message\n//           header=\"Copied to clipboard\"\n//           style={{\n//             background: \"rgb(169, 242, 169)\", \n//             color: \"rgb(32, 99, 32)\",\n//             width: \"25%\"}}\n//         />\n//     </div>\n//   )\n// }\n// MessageDis.defaultPros = {\n//   variant: 'info',\n// }\n// export default MessageDis;\n///////////////\nimport React, { Component } from 'react';\nimport { Message } from 'semantic-ui-react';\n\nvar CopyMessage = /*#__PURE__*/function (_Component) {\n  _inherits(CopyMessage, _Component);\n\n  var _super = _createSuper(CopyMessage);\n\n  function CopyMessage() {\n    _classCallCheck(this, CopyMessage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CopyMessage, [{\n    key: \"render\",\n    // state = { visible: this.props.showCopy }\n    // componentDidMount = async () => {\n    //   const timeId = setTimeout(() => {\n    //     // After 3 seconds set the show value to false\n    //     this.setState({ visible: false })\n    //   }, 3000)\n    //   return () => {\n    //     clearTimeout(timeId)\n    //   }\n    // }\n    value: function render() {\n      // if (!this.state.visible) {\n      //   return null\n      // }\n      return /*#__PURE__*/_jsxDEV(Message, {\n        header: \"Copied to clipboard!\",\n        style: {\n          background: \"rgb(169, 242, 169)\",\n          color: \"rgb(32, 99, 32)\",\n          width: \"25%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CopyMessage;\n}(Component);\n\nexport default CopyMessage;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/MessageDis.js"],"names":["React","Component","Message","CopyMessage","background","color","width"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;IAGMC,W;;;;;;;;;;;;;AACJ;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;6BAES;AACP;AACA;AACA;AAEA,0BACE,QAAC,OAAD;AACE,QAAA,MAAM,EAAC,sBADT;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,oBADP;AAELC,UAAAA,KAAK,EAAE,iBAFF;AAGLC,UAAAA,KAAK,EAAE;AAHF;AAFT;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;;;EA7BuBL,S;;AAgC1B,eAAeE,WAAf","sourcesContent":["// import { useState, useEffect } from 'react'\n// import { Message } from 'semantic-ui-react'\n\n// const MessageDis = ({ variant, children }) => {\n//   const [show, setShow] = useState(true)\n//   // const [show] = useState({children})\n\n//   // On componentDidMount set the timer\n//   useEffect(() => {\n//     const timeId = setTimeout(() => {\n//       // After 3 seconds set the show value to false\n//       setShow(false)\n//     }, 3000)\n\n//     return () => {\n//       clearTimeout(timeId)\n//     }\n//   }, []);\n\n//   // If show is false the component will return null and stop here\n//   if (!show) {\n//     return null;\n//   }\n\n//   // If show is true this will be returned\n//   return (\n//     <div className={`alert alert-${variant}`}>\n//       <Message\n//           header=\"Copied to clipboard\"\n//           style={{\n//             background: \"rgb(169, 242, 169)\", \n//             color: \"rgb(32, 99, 32)\",\n//             width: \"25%\"}}\n//         />\n//     </div>\n//   )\n// }\n\n// MessageDis.defaultPros = {\n//   variant: 'info',\n// }\n\n// export default MessageDis;\n\n///////////////\n\nimport React, { Component } from 'react'\nimport { Message } from 'semantic-ui-react'\n\n\nclass CopyMessage extends Component {\n  // state = { visible: this.props.showCopy }\n\n  // componentDidMount = async () => {\n  //   const timeId = setTimeout(() => {\n  //     // After 3 seconds set the show value to false\n  //     this.setState({ visible: false })\n  //   }, 3000)\n\n  //   return () => {\n  //     clearTimeout(timeId)\n  //   }\n\n  // }\n\n  render() {\n    // if (!this.state.visible) {\n    //   return null\n    // }\n\n    return (\n      <Message\n        header='Copied to clipboard!'\n        style={{\n          background: \"rgb(169, 242, 169)\", \n          color: \"rgb(32, 99, 32)\",\n          width: \"25%\"}}\n      />\n    )\n  }\n}\n\nexport default CopyMessage\n"]},"metadata":{},"sourceType":"module"}
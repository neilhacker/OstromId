{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Card, Button, Input, Icon, Loader, Dimmer, Segment } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'; // import { Router } from '../routes';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport Router from 'next/router';\nimport { sha256 } from 'js-sha256';\nimport mimc from '../mimc.ts';\nimport { calculateProof } from '../prover.js';\nimport CopyMessage from '../components/CopyMessage';\nconst stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\nconst STATUS_PENDING = \"processing\";\nconst STATUS_SUCCESS = \"verified\";\nconst STATUS_ERROR = \"?\";\nconst STATUS_NOT_STARTED = \"not_submitted\";\n\nclass CampaignIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      // ethLoading: false,\n      // verificationLoading: false,\n      clientSecret: null,\n      stripe: null,\n      verification_status: STATUS_NOT_STARTED,\n      verification_session_id: null,\n      sessionIdRandNum: null,\n      sessionIdMimcNum: null,\n      mimcHashNumState: null,\n      solidityVerifierProof: null,\n      zkResult: null,\n      loginDetailsRecieved: false,\n      loaderActive: false,\n      active: true\n    });\n\n    _defineProperty(this, \"verifyIdentity\", async event => {\n      event.preventDefault();\n      this.setState({\n        loaderActive: true\n      });\n      let {\n        stripe,\n        clientSecret\n      } = this.state;\n\n      if (!stripe || !clientSecret) {\n        // this.setState({ loaderActive: false});\n        return;\n      } // Show the verification modal.\n\n\n      const {\n        error\n      } = await stripe.verifyIdentity(clientSecret);\n\n      if (error) {\n        console.log('[error]', error);\n      } else {\n        console.log('Verification submitted!');\n        this.pollForStatus();\n      }\n    });\n\n    _defineProperty(this, \"pollForStatus\", async () => {\n      if (this.state.verification_status !== STATUS_SUCCESS) {\n        setTimeout(this.pollForStatus, 5000);\n        this.fetchStatus();\n      }\n\n      if (this.state.verification_status !== STATUS_PENDING && this.state.verification_status !== STATUS_NOT_STARTED) {\n        this.setState({\n          loaderActive: false,\n          loginDetailsRecieved: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"fetchStatus\", async () => {\n      //handle error if session id isn't set\n      fetch('/api/get-verification-session/' + this.state.verification_session_id).then(res => res.json()).then(data => this.setState({\n        verification_status: data.status,\n        sessionIdRandNum: data.randSeededNum,\n        sessionIdMimcNum: data.mimcVal\n      }));\n    });\n\n    _defineProperty(this, \"mimcHashNum\", async () => {\n      const preImage1 = document.getElementById('mimc_num').value;\n      console.log(preImage1);\n      const out = mimc(preImage1);\n      console.log(out.toString());\n      this.setState({\n        mimcHashNumState: out.toString()\n      });\n    });\n\n    _defineProperty(this, \"verifyPreimage\", async () => {\n      const preImage = parseInt(document.getElementById('preImageCredential').value);\n      console.log(preImage);\n      const hash = document.getElementById('mimcHashCredential').value;\n      console.log(hash);\n      const solidityProof = await calculateProof(preImage, hash);\n      this.setState({\n        solidityVerifierProof: solidityProof\n      });\n      console.log(solidityProof);\n    });\n\n    _defineProperty(this, \"submitSolProof\", async () => {\n      // event.preventDefault();\n      // CREATING ZKP FROM HASH AND PRE-IMAGE \n      const preImage = parseInt(document.getElementById('preImageCredential').value);\n      console.log(preImage);\n      const hash = document.getElementById('mimcHashCredential').value;\n      console.log(hash);\n      const solidityProof = await calculateProof(preImage, hash); // this.setState({solidityVerifierProof: solidityProof});\n\n      console.log(solidityProof); // SUBMIT ZKP TO CONTRACT  \n\n      this.setState({\n        loaderActive: true,\n        errorMessage: ''\n      });\n      this.setState({\n        verification_status: \"starting eth transaction\"\n      });\n      const fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n      const pi_a = fullProof[0];\n      const pi_b = fullProof[1];\n      const pi_c = fullProof[2];\n      const inputs = fullProof[3]; // send zk proof to verifyHash function\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.verifyHash(pi_a, pi_b, pi_c, inputs).send({\n          from: accounts[0]\n        });\n        console.log(\"submitted zkp successfully\"); // Router.reload(window.location.pathname)\n\n        let res = await factory.methods.checkIfAddressVerified().call({\n          from: accounts[0]\n        });\n        this.setState({\n          zkResult: res.toString()\n        });\n        console.log(\"checked if msg.sender is verified\");\n      } catch (err) {\n        console.log(\"error in submit sol proof\");\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loaderActive: false\n      });\n    });\n\n    _defineProperty(this, \"copyCodeToClipboard1\", () => {\n      var copyText = document.getElementById(\"copybutton1\").innerText;\n      var textarea = document.createElement('textarea');\n      textarea.id = 'temp_element';\n      textarea.style.height = 0;\n      document.body.appendChild(textarea);\n      textarea.value = copyText;\n      var selector = document.querySelector('#temp_element');\n      selector.select();\n      document.execCommand('copy');\n      document.body.removeChild(textarea);\n      this.setState({\n        copySuccess: true,\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 43\n        }, this)\n      });\n    });\n\n    _defineProperty(this, \"copyCodeToClipboard2\", () => {\n      var copyText = document.getElementById(\"copybutton2\").innerText;\n      var textarea = document.createElement('textarea');\n      textarea.id = 'temp_element';\n      textarea.style.height = 0;\n      document.body.appendChild(textarea);\n      textarea.value = copyText;\n      var selector = document.querySelector('#temp_element');\n      selector.select();\n      document.execCommand('copy');\n      document.body.removeChild(textarea);\n      this.setState({\n        copySuccess: true,\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 43\n        }, this)\n      });\n    });\n\n    _defineProperty(this, \"handleShow\", () => this.setState({\n      active: true\n    }));\n\n    _defineProperty(this, \"handleHide\", () => this.setState({\n      active: false\n    }));\n  }\n\n  static async getInitialProps() {\n    const count = await factory.methods.getNumOfVerifiedTransactions().call();\n    return {\n      count\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 50,\n            marginLeft: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Dimmer.Dimmable, {\n              as: Segment,\n              blurring: true,\n              dimmed: this.state.active,\n              children: [/*#__PURE__*/_jsxDEV(Dimmer, {\n                active: this.state.active,\n                inverted: true,\n                onClickOutside: this.handleHide\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"plus\",\n                onClick: this.handleShow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"minus\",\n                onClick: this.handleHide\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Session status: \", this.state.verification_status, \" \\xA0 \\xA0\", this.state.loaderActive ? /*#__PURE__*/_jsxDEV(Loader, {\n              active: true,\n              inline: true,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CopyMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Verify your identity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: this.verifyIdentity,\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), this.state.loginDetailsRecieved ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Pre-image: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: true,\n                labelPosition: \"right\",\n                id: \"copybutton1\",\n                onClick: this.copyCodeToClipboard1,\n                children: [this.state.sessionIdRandNum, /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Hash: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: true,\n                labelPosition: \"right\",\n                id: \"copybutton2\",\n                onClick: this.copyCodeToClipboard2,\n                children: [this.state.sessionIdMimcNum, /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No login details yet...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create and submit proof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"preImageCredential\",\n              placeholder: \"Pre-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"mimcHashCredential\",\n              placeholder: \"Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: this.submitSolProof,\n            children: \"Send proof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Result: \", this.state.zkResult]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js"],"names":["React","Component","Card","Button","Input","Icon","Loader","Dimmer","Segment","factory","solVerifier","Layout","Link","web3","loadStripe","Router","sha256","mimc","calculateProof","CopyMessage","stripePromise","STATUS_PENDING","STATUS_SUCCESS","STATUS_ERROR","STATUS_NOT_STARTED","CampaignIndex","errorMessage","clientSecret","stripe","verification_status","verification_session_id","sessionIdRandNum","sessionIdMimcNum","mimcHashNumState","solidityVerifierProof","zkResult","loginDetailsRecieved","loaderActive","active","event","preventDefault","setState","state","error","verifyIdentity","console","log","pollForStatus","setTimeout","fetchStatus","fetch","then","res","json","data","status","randSeededNum","mimcVal","preImage1","document","getElementById","value","out","toString","preImage","parseInt","hash","solidityProof","fullProof","JSON","parse","pi_a","pi_b","pi_c","inputs","accounts","eth","getAccounts","methods","verifyHash","send","from","checkIfAddressVerified","call","err","message","copyText","innerText","textarea","createElement","id","style","height","body","appendChild","selector","querySelector","select","execCommand","removeChild","copySuccess","icon","getInitialProps","count","getNumOfVerifiedTransactions","render","marginTop","marginLeft","handleHide","handleShow","copyCodeToClipboard1","copyCodeToClipboard2","submitSolProof"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Input, Icon, Loader, Dimmer,Segment } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\n\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'\n// import { Router } from '../routes';\nimport {loadStripe} from '@stripe/stripe-js';\nimport Router from 'next/router'\nimport { sha256 } from 'js-sha256';\nimport mimc from '../mimc.ts';\n\nimport { calculateProof } from '../prover.js'\n\nimport CopyMessage from '../components/CopyMessage'\n\nconst stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\n\nconst STATUS_PENDING = \"processing\"\nconst STATUS_SUCCESS = \"verified\";\nconst STATUS_ERROR = \"?\"\nconst STATUS_NOT_STARTED = \"not_submitted\";\n\nclass CampaignIndex extends Component {\n \n  static async getInitialProps() {\n    const count = await factory.methods.getNumOfVerifiedTransactions().call();\n\n    return { count };\n  }\n\n  state = {\n    errorMessage: '',\n    // ethLoading: false,\n    // verificationLoading: false,\n    clientSecret: null,\n    stripe: null,\n    verification_status: STATUS_NOT_STARTED,\n    verification_session_id: null,\n    sessionIdRandNum: null,\n    sessionIdMimcNum: null,\n    mimcHashNumState:null,\n    solidityVerifierProof:null,\n    zkResult: null,\n    loginDetailsRecieved: false,\n    loaderActive: false,\n    active:true,\n  };  \n\n  // componentDidMount = async () => {\n  //   fetch('/api/create-verification-session')\n  //   .then(res => res.json())\n  //   .then(data => this.setState({clientSecret: data.clientSecret, verification_session_id: data.id}))\n\n  //   this.setState({ stripe: await stripePromise })\n  // }\n\n  verifyIdentity = async (event) => {\n    event.preventDefault();\n    this.setState({ loaderActive: true});\n\n    let { stripe, clientSecret } = this.state;\n    \n    if (!stripe || !clientSecret) {\n      // this.setState({ loaderActive: false});\n      return;\n    }\n\n    // Show the verification modal.\n    const { error } = await stripe.verifyIdentity(clientSecret);\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('Verification submitted!');\n      this.pollForStatus();\n    }\n\n  }\n\n  pollForStatus = async() => {\n    if(this.state.verification_status !== STATUS_SUCCESS) {\n      setTimeout(this.pollForStatus, 5000)\n      this.fetchStatus()\n    }\n    if(this.state.verification_status !== STATUS_PENDING && this.state.verification_status !== STATUS_NOT_STARTED) {\n        this.setState({ loaderActive: false, loginDetailsRecieved: true});\n    }\n\n  }\n\n  fetchStatus = async () => {\n    //handle error if session id isn't set\n    fetch('/api/get-verification-session/' + this.state.verification_session_id)\n      .then(res => res.json())\n      .then(data => this.setState({\n        verification_status: data.status, \n        sessionIdRandNum: data.randSeededNum,\n        sessionIdMimcNum: data.mimcVal,\n      }))\n  }\n\nmimcHashNum = async () => {\n const preImage1 = document.getElementById('mimc_num').value\n console.log(preImage1)\n const out = mimc(preImage1);\n console.log(out.toString())\n this.setState({mimcHashNumState: out.toString()});\n\n}\n\nverifyPreimage = async() => {\n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n}\n\nsubmitSolProof = async () => {\n  // event.preventDefault();\n  \n  // CREATING ZKP FROM HASH AND PRE-IMAGE \n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  // this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n\n  // SUBMIT ZKP TO CONTRACT  \n  this.setState({ loaderActive: true, errorMessage: '' });\n  this.setState({verification_status: \"starting eth transaction\"})\n\n  const fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n\n  const pi_a = fullProof[0]\n  const pi_b = fullProof[1]\n  const pi_c = fullProof[2]\n  const inputs = fullProof[3]\n  \n\n  // send zk proof to verifyHash function\n  try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n          .verifyHash(pi_a,pi_b,pi_c,inputs)\n          .send({\n              from: accounts[0]\n      });\n      \n      console.log(\"submitted zkp successfully\")\n      // Router.reload(window.location.pathname)\n\n      let res = await factory.methods\n          .checkIfAddressVerified()\n          .call({\n              from: accounts[0]\n      });\n      this.setState({zkResult: res.toString()});\n      console.log(\"checked if msg.sender is verified\")\n\n\n  } catch (err) {\n      console.log(\"error in submit sol proof\")\n      this.setState({ errorMessage: err.message });\n  }\n\n  this.setState({loaderActive: false});\n}\n\ncopyCodeToClipboard1 = () => {\n\n  var copyText = document.getElementById(\"copybutton1\").innerText;\n  var textarea = document.createElement('textarea');\n  textarea.id = 'temp_element';\n  textarea.style.height = 0;\n  document.body.appendChild(textarea);\n  textarea.value = copyText;\n  var selector = document.querySelector('#temp_element')\n  selector.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea);\n  this.setState({copySuccess: true, icon: <Icon name='copy' />})\n}\n\ncopyCodeToClipboard2 = () => {\n\n  var copyText = document.getElementById(\"copybutton2\").innerText;\n  var textarea = document.createElement('textarea');\n  textarea.id = 'temp_element';\n  textarea.style.height = 0;\n  document.body.appendChild(textarea);\n  textarea.value = copyText;\n  var selector = document.querySelector('#temp_element')\n  selector.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea);\n  this.setState({copySuccess: true, icon: <Icon name='copy' />})\n}\n\nhandleShow = () => this.setState({ active: true })\nhandleHide = () => this.setState({ active: false })\n\n  render() {\n    return (\n        <Layout >\n            <div>\n              <div style={{marginTop: 50, marginLeft: 200}}>\n\n              <div>\n                <Dimmer.Dimmable as={Segment} blurring dimmed={this.state.active}>\n                  <Dimmer active={this.state.active} inverted onClickOutside={this.handleHide} />\n\n                  {/* <p>hi</p> */}\n                  <Button icon='plus' onClick={this.handleShow} />\n                  <Button icon='minus' onClick={this.handleHide} />\n                </Dimmer.Dimmable>\n\n                  {/* <Button icon='plus' onClick={this.handleShow} />\n                  <Button icon='minus' onClick={this.handleHide} /> */}\n              </div>\n\n              \n                <h2>Session status: {this.state.verification_status} &nbsp; &nbsp;\n                {\n                  this.state.loaderActive ?\n                  <Loader active inline size=\"small\" />: null\n                }\n                </h2>\n                <CopyMessage></CopyMessage>\n                \n                <hr/>                \n                \n                <h2>Verify your identity</h2>\n                <Button primary onClick={this.verifyIdentity}>Verify</Button>\n\n                <hr/>\n                \n                <h2>Login credentials</h2>\n                {\n                this.state.loginDetailsRecieved ?\n                  <div>\n                    <h3>Pre-image: &nbsp; <br></br>  \n                      <Button \n                        icon \n                        labelPosition='right'\n                        id = \"copybutton1\"\n                        onClick={this.copyCodeToClipboard1}\n                      >\n                        {this.state.sessionIdRandNum}\n                        <Icon name='copy' />\n                      </Button>\n                    </h3>\n                    <h3>Hash: &nbsp; <br></br>\n                      <Button \n                        icon \n                        labelPosition='right'\n                        id = \"copybutton2\"\n                        onClick={this.copyCodeToClipboard2}\n                      >\n                        {this.state.sessionIdMimcNum}\n                        <Icon name='copy' />\n                      </Button>\n                    </h3>\n                  </div> : <h4>No login details yet...</h4>\n                }\n                                \n                <hr/>\n                \n                <h2>Create and submit proof</h2>\n                <p><Input id=\"preImageCredential\" placeholder=\"Pre-image\"></Input></p>\n                <p><Input id=\"mimcHashCredential\" placeholder=\"Hash\"></Input></p>\n                <Button primary onClick={this.submitSolProof} >Send proof</Button> \n\n                <hr/>\n\n                <h2>Result: {this.state.zkResult}</h2>\n\n            \n            </div>\n            </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
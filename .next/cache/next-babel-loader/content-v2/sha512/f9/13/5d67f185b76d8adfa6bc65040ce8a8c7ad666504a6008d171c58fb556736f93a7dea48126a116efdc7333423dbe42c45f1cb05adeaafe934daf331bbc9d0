{"ast":null,"code":"import Web3 from \"web3\";\nlet web3;\n\nif (false && typeof window.ethereum !== \"undefined\") {\n  // We are in the browser and metamask is running.\n  window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n  web3 = new Web3(window.ethereum);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n  web3 = new Web3(provider);\n}\n\nexport default web3; // const web3Call = async () => {\n//   let web3;\n//   if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n//     // We are in the browser and metamask is running.\n//     window.ethereum.request({ method: \"eth_requestAccounts\" });\n//     web3 = new Web3(window.ethereum);\n//   } else {\n//     // We are on the server *OR* the user is not running metamask\n//     const provider = new Web3.providers.HttpProvider(\n//       \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n//     );\n//     web3 = new Web3(provider);\n//   }\n//   return web3\n// }\n// export default web3Call;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/ethereum/web3.js"],"names":["Web3","web3","window","ethereum","request","method","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEA,IAAI,SAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3E;AACAD,EAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAxB;AACAJ,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAP;AACD,CAJD,MAIO;AACL;AACA,QAAMG,QAAQ,GAAG,IAAIN,IAAI,CAACO,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGAP,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASM,QAAT,CAAP;AACD;;AAED,eAAeL,IAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n  // We are in the browser and metamask is running.\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\n  web3 = new Web3(window.ethereum);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  const provider = new Web3.providers.HttpProvider(\n    \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n  );\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n\n// const web3Call = async () => {\n//   let web3;\n\n//   if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n//     // We are in the browser and metamask is running.\n//     window.ethereum.request({ method: \"eth_requestAccounts\" });\n//     web3 = new Web3(window.ethereum);\n//   } else {\n//     // We are on the server *OR* the user is not running metamask\n//     const provider = new Web3.providers.HttpProvider(\n//       \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n//     );\n//     web3 = new Web3(provider);\n//   }\n//   return web3\n// }\n\n// export default web3Call;"]},"metadata":{},"sourceType":"module"}
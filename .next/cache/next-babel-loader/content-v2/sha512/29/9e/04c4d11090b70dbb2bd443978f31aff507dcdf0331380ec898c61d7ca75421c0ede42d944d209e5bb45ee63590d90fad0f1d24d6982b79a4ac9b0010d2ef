{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/pages/about.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Button, Input, Icon } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Router from 'next/router';\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 50,\n                marginLeft: 200\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"How does this work? \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Step 1. Connect wallet (~10s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"This app requires you to connect with a metamask wallet, you can find the button to do so in the status section of the home page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Step 2. Deposit (~30s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Stripe charges for every verification and so to prevent unlimited funds being spent users have to register a deposit on chain from an account they control before they will be able to carry on the verification process\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Step 3. Verify (~2-4m)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Click the \\\"verify\\\" button which will bring up the Stripe Idenity flow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"You then submit your identity documents which then get verified if real\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"If your verification check comes back as a success we then check to see if you've been through the process before (this helps provide sybil resistance)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"If that check passes then it means you are a new user of this service...welcome \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"The server then sends a hash to our smart contract that you will use to verify yourself on chain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Step 4. Prove (~30s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"You get sent two bits of information 1. a preimage 2. the hash of that preimage (the same hash sent on chain) \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"You can then copy these details over to our proof generator and click \\\"send\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"This creates a ZKP that you know the preimage to the hash that was sent on chain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"This proof is then sent to the smart contract and if it is a valid ZKP the contract then looks to see if the hash has been uploaded by the server \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"If both checks pass then the address that sent the transaction is whitelisted and the hash is deactivated. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/pages/about.js"],"names":["React","Component","Card","Button","Input","Icon","Layout","Link","web3","Router","CampaignIndex","marginTop","marginLeft"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,IAA9B,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAGMC,a;;;;;;;;;;;;;6BAGK;AACP,0BACE;AAAA,+BACE,QAAC,MAAD;AAAA,iCACI;AAAA,mCACE;AAAK,cAAA,KAAK,EAAE;AAACC,gBAAAA,SAAS,EAAE,EAAZ;AAAgBC,gBAAAA,UAAU,EAAE;AAA5B,eAAZ;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAoCD;;;;EAxCyBX,S;;AA2C5B,eAAeS,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Input, Icon } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'\nimport Router from 'next/router'\n\n\nclass CampaignIndex extends Component {\n \n\n  render() {\n    return (\n      <>\n        <Layout>\n            <div>\n              <div style={{marginTop: 50, marginLeft: 200}}>\n                <h2>How does this work? </h2>\n                <h3>Step 1. Connect wallet (~10s)</h3>\n                <li>This app requires you to connect with a metamask wallet, you can find the button to do \n                  so in the status section of the home page</li>\n\n                <h3>Step 2. Deposit (~30s)</h3>\n                <li>Stripe charges for every verification and so to prevent unlimited funds being spent users \n                  have to register a deposit on chain from an account they control before they will be able to \n                  carry on the verification process</li>\n\n                <h3>Step 3. Verify (~2-4m)</h3>\n                <li>Click the \"verify\" button which will bring up the Stripe Idenity flow</li>\n                <li>You then submit your identity documents which then get verified if real</li>\n                <li>If your verification check comes back as a success we then check to \n                  see if you've been through the process before (this helps provide sybil resistance)</li>\n                <li>If that check passes then it means you are a new user of this service...welcome </li>\n                <li>The server then sends a hash to our smart contract that you will use to verify yourself on chain</li>\n\n                <h3>Step 4. Prove (~30s)</h3>\n                <li>You get sent two bits of information 1. a preimage 2. the hash of that preimage (the same hash sent on chain) </li>\n                <li>You can then copy these details over to our proof generator and click \"send\"</li>\n                <li>This creates a ZKP that you know the preimage to the hash that was sent on chain</li>\n                <li>This proof is then sent to the smart contract and if it is a valid ZKP the contract then \n                  looks to see if the hash has been uploaded by the server </li>\n                <li>If both checks pass then the address that sent the transaction is whitelisted and the hash \n                  is deactivated. </li>\n            </div>\n            </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
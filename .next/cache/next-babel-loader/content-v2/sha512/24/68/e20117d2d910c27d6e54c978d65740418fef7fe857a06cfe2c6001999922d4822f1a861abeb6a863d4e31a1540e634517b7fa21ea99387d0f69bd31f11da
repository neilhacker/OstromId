{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/pages/about.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Button, Input, Icon } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Router from 'next/router';\nimport OptionButton from \"../components/OptionButton\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      optionAnonymous: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeVerificationType\", function () {\n      _this.setState({\n        optionAnonymous: !_this.state.optionAnonymous\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderAboutInfo\",\n    value: function renderAboutInfo() {\n      if (this.state.optionAnonymous) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How does Anonymous verification work? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 1. Connect wallet (~10s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"This app requires you to connect with a metamask wallet, you can find the button to do so in the status section of the home page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 2. Deposit (~30s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Stripe charges for every verification and so to prevent unlimited funds being spent users have to register a deposit on chain from an account they control before they will be able to carry on the verification process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 3. Verify (~2-4m)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click the \\\"verify\\\" button which will bring up the Stripe Idenity flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You then submit your identity documents which then get verified if real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If your verification check comes back as a success we then check to see if you've been through the process before (this helps provide sybil resistance)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If that check passes then it means you are a new user of this service...welcome \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The server then sends a hash to our smart contract that you will use to verify yourself on chain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 4. Prove (~30s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You get sent two bits of information 1. a preimage 2. the hash of that preimage (the same hash sent on chain) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can then copy these details over to our proof generator and click \\\"send\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"This creates a ZKP that you know the preimage to the hash that was sent on chain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"This proof is then sent to the smart contract and if it is a valid ZKP the contract then looks to see if the hash has been uploaded by the server \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If both checks pass then the address that sent the transaction is whitelisted and the hash is deactivated. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How does Open verification work? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 1. Connect wallet (~10s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"This app requires you to connect with a metamask wallet, you can find the button to do so in the status section of the home page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 2. Deposit (~30s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Stripe charges for every verification and so to prevent unlimited funds being spent users have to register a deposit on chain from an account they control before they will be able to carry on the verification process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Step 3. Verify (~2-4m)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click the \\\"verify\\\" button which will bring up the Stripe Idenity flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You then submit your identity documents which then get verified if real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If your verification check comes back as a success we then check to see if you've been through the process before (this helps provide sybil resistance)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If that check passes then it means you are a new user of this service...welcome \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The server then submits your name and active metamask account to the smart contract\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"That's it for this type of verirication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 25\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: this.changeVerificationType,\n                style: {\n                  marginBottom: 25\n                },\n                children: /*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), this.renderAboutInfo()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/project/working_on/ostrom_id_copy_7/pages/about.js"],"names":["React","Component","Card","Button","Input","Icon","Layout","Link","web3","Router","OptionButton","CampaignIndex","optionAnonymous","setState","state","marginTop","changeVerificationType","marginBottom","renderAboutInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Input, Icon } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'\nimport Router from 'next/router'\nimport OptionButton from \"../components/OptionButton\";\n\n\nclass CampaignIndex extends Component {\n  state = {\n    optionAnonymous: true,\n  }\n \n  changeVerificationType = () => {\n    this.setState({optionAnonymous: !this.state.optionAnonymous})  \n  }\n    \n  renderAboutInfo() {\n    if (this.state.optionAnonymous) {\n      return (\n        <div>\n        <h2>How does Anonymous verification work? </h2>\n\n        <div className=\"aboutBox\">\n        <h3>Step 1. Connect wallet (~10s)</h3>\n        <li>This app requires you to connect with a metamask wallet, you can find the button to do \n          so in the status section of the home page</li>\n        </div>\n\n        <div className=\"aboutBox\">\n        <h3>Step 2. Deposit (~30s)</h3>\n        <li>Stripe charges for every verification and so to prevent unlimited funds being spent users \n          have to register a deposit on chain from an account they control before they will be able to \n          carry on the verification process</li>\n        </div>\n\n        <div className=\"aboutBox\">\n        <h3>Step 3. Verify (~2-4m)</h3>\n        <li>Click the \"verify\" button which will bring up the Stripe Idenity flow</li>\n        <li>You then submit your identity documents which then get verified if real</li>\n        <li>If your verification check comes back as a success we then check to \n          see if you've been through the process before (this helps provide sybil resistance)</li>\n        <li>If that check passes then it means you are a new user of this service...welcome </li>\n        <li>The server then sends a hash to our smart contract that you will use to verify yourself on chain</li>\n        </div>\n\n        <div className=\"aboutBox\">\n        <h3>Step 4. Prove (~30s)</h3>\n        <li>You get sent two bits of information 1. a preimage 2. the hash of that preimage (the same hash sent on chain) </li>\n        <li>You can then copy these details over to our proof generator and click \"send\"</li>\n        <li>This creates a ZKP that you know the preimage to the hash that was sent on chain</li>\n        <li>This proof is then sent to the smart contract and if it is a valid ZKP the contract then \n          looks to see if the hash has been uploaded by the server </li>\n        <li>If both checks pass then the address that sent the transaction is whitelisted and the hash \n          is deactivated. </li>\n        </div>\n        \n        </div>\n      )\n    } else {\n      return (\n        <div>\n        <h2>How does Open verification work? </h2>\n\n        <div className=\"aboutBox\">\n        <h3>Step 1. Connect wallet (~10s)</h3>\n        <li>This app requires you to connect with a metamask wallet, you can find the button to do \n          so in the status section of the home page</li>\n        </div>\n\n        <div className=\"aboutBox\">\n        <h3>Step 2. Deposit (~30s)</h3>\n        <li>Stripe charges for every verification and so to prevent unlimited funds being spent users \n          have to register a deposit on chain from an account they control before they will be able to \n          carry on the verification process</li>\n        </div>\n\n        <div className=\"aboutBox\">\n        <h3>Step 3. Verify (~2-4m)</h3>\n        <li>Click the \"verify\" button which will bring up the Stripe Idenity flow</li>\n        <li>You then submit your identity documents which then get verified if real</li>\n        <li>If your verification check comes back as a success we then check to \n          see if you've been through the process before (this helps provide sybil resistance)</li>\n        <li>If that check passes then it means you are a new user of this service...welcome </li>\n        <li>The server then submits your name and active metamask account to the smart contract</li>\n        <li>That's it for this type of verirication</li>\n        </div>\n\n       \n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <>\n        <Layout>\n            <div>\n              <div style={{marginTop: 25}}>\n              <div onClick={this.changeVerificationType} style={{marginBottom: 25}}>\n              <OptionButton ></OptionButton>\n              </div>\n                {this.renderAboutInfo()}\n            </div>\n            </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
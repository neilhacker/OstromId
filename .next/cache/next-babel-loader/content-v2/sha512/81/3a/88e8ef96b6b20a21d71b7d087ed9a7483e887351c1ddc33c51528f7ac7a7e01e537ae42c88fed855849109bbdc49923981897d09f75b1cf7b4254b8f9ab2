{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Message, Button, Input, Icon, Loader, Dimmer, Segment } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'; // import { Router } from '../routes';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport Router from 'next/router';\nimport { sha256 } from 'js-sha256';\nimport mimc from '../public/mimc.ts';\nimport { calculateProof } from '../public/prover.js';\nimport CopyMessage from '../components/CopyMessage';\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\nvar stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\nvar STATUS_PENDING = \"processing\";\nvar STATUS_SUCCESS = \"verified\";\nvar STATUS_ERROR = \"?\";\nvar STATUS_NOT_STARTED = \"not_submitted\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorMessage: '',\n      errorTrue: false,\n      loaderActive: false,\n      accountAlreadyVerified: false,\n      // stripe\n      clientSecret: null,\n      stripe: null,\n      verification_status: STATUS_NOT_STARTED,\n      verification_session_id: null,\n      sessionIdRandNum: null,\n      sessionIdMimcNum: null,\n      //login\n      loginDetailsRecieved: false,\n      //zkp\n      mimcHashNumState: null,\n      solidityVerifierProof: null,\n      zkResult: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fetch('/api/create-verification-session').then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return _this.setState({\n                  clientSecret: data.clientSecret,\n                  verification_session_id: data.id\n                });\n              });\n              _context.t0 = _this;\n              _context.next = 4;\n              return stripePromise;\n\n            case 4:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                stripe: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n              _context.next = 9;\n              return web3.eth.getAccounts();\n\n            case 9:\n              accounts = _context.sent;\n              _context.next = 12;\n              return factory.methods.checkIfAddressVerified().call({\n                from: accounts[0]\n              });\n\n            case 12:\n              res = _context.sent;\n\n              _this.setState({\n                accountAlreadyVerified: res\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyIdentity\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var _this$state, stripe, clientSecret, _yield$stripe$verifyI, error;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.resetError();\n\n                _this.setState({\n                  loaderActive: true\n                });\n\n                _this$state = _this.state, stripe = _this$state.stripe, clientSecret = _this$state.clientSecret;\n\n                if (!(!stripe || !clientSecret)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _this.setState({\n                  loaderActive: false,\n                  errorTrue: true,\n                  errorMessage: \"Stripe not connecting\"\n                });\n\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                _context2.next = 9;\n                return stripe.verifyIdentity(clientSecret);\n\n              case 9:\n                _yield$stripe$verifyI = _context2.sent;\n                error = _yield$stripe$verifyI.error;\n\n                if (error) {\n                  console.log('[error]', error);\n                } else {\n                  console.log('Verification submitted!');\n\n                  _this.pollForStatus();\n                }\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"pollForStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (_this.state.verification_status !== STATUS_SUCCESS) {\n                setTimeout(_this.pollForStatus, 5000);\n\n                _this.fetchStatus();\n              }\n\n              if (_this.state.verification_status !== STATUS_PENDING && _this.state.verification_status !== STATUS_NOT_STARTED) {\n                _this.setState({\n                  loaderActive: false,\n                  loginDetailsRecieved: true\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //handle error if session id isn't set\n              fetch('/api/get-verification-session/' + _this.state.verification_session_id).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return _this.setState({\n                  verification_status: data.status,\n                  sessionIdRandNum: data.randSeededNum,\n                  sessionIdMimcNum: data.mimcVal\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"mimcHashNum\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var preImage1, out;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              preImage1 = document.getElementById('mimc_num').value;\n              console.log(preImage1);\n              out = mimc(preImage1);\n              console.log(out.toString());\n\n              _this.setState({\n                mimcHashNumState: out.toString()\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyPreimage\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var preImage, hash, solidityProof;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              preImage = parseInt(document.getElementById('preImageCredential').value);\n              console.log(preImage);\n              hash = document.getElementById('mimcHashCredential').value;\n              console.log(hash);\n              _context6.next = 6;\n              return calculateProof(preImage, hash);\n\n            case 6:\n              solidityProof = _context6.sent;\n\n              _this.setState({\n                solidityVerifierProof: solidityProof\n              });\n\n              console.log(solidityProof);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"submitSolProof\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var preImage, hash, solidityProof, fullProof, pi_a, pi_b, pi_c, inputs, accounts, res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              // event.preventDefault();\n              // CREATING ZKP FROM HASH AND PRE-IMAGE \n              preImage = parseInt(document.getElementById('preImageCredential').value);\n              console.log(preImage);\n              hash = document.getElementById('mimcHashCredential').value;\n              console.log(hash);\n              _context7.next = 6;\n              return calculateProof(preImage, hash);\n\n            case 6:\n              solidityProof = _context7.sent;\n              // this.setState({solidityVerifierProof: solidityProof});\n              console.log(solidityProof); // SUBMIT ZKP TO CONTRACT  \n\n              _this.setState({\n                loaderActive: true,\n                errorMessage: ''\n              });\n\n              _this.setState({\n                verification_status: \"starting eth transaction\"\n              });\n\n              fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n              pi_a = fullProof[0];\n              pi_b = fullProof[1];\n              pi_c = fullProof[2];\n              inputs = fullProof[3]; // send zk proof to verifyHash function\n\n              _context7.prev = 15;\n              _context7.next = 18;\n              return web3.eth.getAccounts();\n\n            case 18:\n              accounts = _context7.sent;\n              _context7.next = 21;\n              return factory.methods.verifyHash(pi_a, pi_b, pi_c, inputs).send({\n                from: accounts[0]\n              });\n\n            case 21:\n              console.log(\"submitted zkp successfully\"); // Router.reload(window.location.pathname)\n\n              _context7.next = 24;\n              return factory.methods.checkIfAddressVerified().call({\n                from: accounts[0]\n              });\n\n            case 24:\n              res = _context7.sent;\n\n              _this.setState({\n                zkResult: res.toString()\n              });\n\n              console.log(\"checked if msg.sender is verified\");\n              _context7.next = 33;\n              break;\n\n            case 29:\n              _context7.prev = 29;\n              _context7.t0 = _context7[\"catch\"](15);\n              console.log(\"error in submit sol proof\");\n\n              _this.setState({\n                errorMessage: _context7.t0.message\n              });\n\n            case 33:\n              _this.setState({\n                loaderActive: false\n              });\n\n            case 34:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[15, 29]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"resetError\", function () {\n      _this.setState({\n        errorTrue: false,\n        errorMessage: \"\"\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 50,\n              marginLeft: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Session status: \", this.state.verification_status, \" \\xA0 \\xA0\", this.state.loaderActive ? /*#__PURE__*/_jsxDEV(Loader, {\n                active: true,\n                inline: true,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), this.state.errorTrue ? /*#__PURE__*/_jsxDEV(Message, {\n              negative: true,\n              children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this) : null, this.state.accountAlreadyVerified ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"green\"\n              },\n              children: \"Looks like your account is already verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Verify your identity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.verifyIdentity,\n              children: \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), this.state.loginDetailsRecieved ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Pre-image: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PreImageButton, {\n                children: this.state.sessionIdRandNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Hash: \\xA0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HashButton, {\n                children: this.state.sessionIdMimcNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No login details yet...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create and submit proof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"preImageCredential\",\n                placeholder: \"Pre-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"mimcHashCredential\",\n                placeholder: \"Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: this.submitSolProof,\n              children: \"Send proof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Result: \", this.state.zkResult]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var count;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return factory.methods.getNumOfVerifiedTransactions().call();\n\n              case 2:\n                count = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  count: count\n                });\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js"],"names":["React","Component","Message","Button","Input","Icon","Loader","Dimmer","Segment","factory","solVerifier","Layout","Link","web3","loadStripe","Router","sha256","mimc","calculateProof","CopyMessage","PreImageButton","HashButton","stripePromise","STATUS_PENDING","STATUS_SUCCESS","STATUS_ERROR","STATUS_NOT_STARTED","CampaignIndex","errorMessage","errorTrue","loaderActive","accountAlreadyVerified","clientSecret","stripe","verification_status","verification_session_id","sessionIdRandNum","sessionIdMimcNum","loginDetailsRecieved","mimcHashNumState","solidityVerifierProof","zkResult","fetch","then","res","json","data","setState","id","eth","getAccounts","accounts","methods","checkIfAddressVerified","call","from","event","preventDefault","resetError","state","verifyIdentity","error","console","log","pollForStatus","setTimeout","fetchStatus","status","randSeededNum","mimcVal","preImage1","document","getElementById","value","out","toString","preImage","parseInt","hash","solidityProof","fullProof","JSON","parse","pi_a","pi_b","pi_c","inputs","verifyHash","send","message","marginTop","marginLeft","color","submitSolProof","getNumOfVerifiedTransactions","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Message, Button, Input, Icon, Loader, Dimmer,Segment } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\n\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'\n// import { Router } from '../routes';\nimport {loadStripe} from '@stripe/stripe-js';\nimport Router from 'next/router'\nimport { sha256 } from 'js-sha256';\nimport mimc from '../public/mimc.ts';\n\nimport { calculateProof } from '../public/prover.js'\n\nimport CopyMessage from '../components/CopyMessage'\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\n\n\nconst stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\n\nconst STATUS_PENDING = \"processing\"\nconst STATUS_SUCCESS = \"verified\";\nconst STATUS_ERROR = \"?\"\nconst STATUS_NOT_STARTED = \"not_submitted\";\n\nclass CampaignIndex extends Component {\n \n  static async getInitialProps() {\n    const count = await factory.methods.getNumOfVerifiedTransactions().call();\n\n    return { count };\n  }\n\n  state = {\n    errorMessage: '',\n    errorTrue: false,\n    loaderActive: false,\n    accountAlreadyVerified: false,\n    // stripe\n    clientSecret: null,\n    stripe: null,\n    verification_status: STATUS_NOT_STARTED,\n    verification_session_id: null,\n    sessionIdRandNum: null,\n    sessionIdMimcNum: null,\n    //login\n    loginDetailsRecieved: false,\n    //zkp\n    mimcHashNumState:null,\n    solidityVerifierProof:null,\n    zkResult: null,\n  };  \n\n  componentDidMount = async () => {\n    fetch('/api/create-verification-session')\n    .then(res => res.json())\n    .then(data => this.setState({clientSecret: data.clientSecret, verification_session_id: data.id}))\n\n    this.setState({ stripe: await stripePromise })\n\n    // checking if account is already verified\n    const accounts = await web3.eth.getAccounts();\n    let res = await factory.methods\n        .checkIfAddressVerified()\n        .call({\n            from: accounts[0]\n    });\n    this.setState({accountAlreadyVerified: res});\n\n\n  }\n\n  verifyIdentity = async (event) => {\n    event.preventDefault();\n\n    this.resetError()\n    this.setState({ loaderActive: true});\n\n    let { stripe, clientSecret } = this.state;\n    \n    if (!stripe || !clientSecret) {\n      this.setState({ loaderActive: false, errorTrue: true, errorMessage: \"Stripe not connecting\"});\n      return;\n    }\n\n    // Show the verification modal.\n    const { error } = await stripe.verifyIdentity(clientSecret);\n    \n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('Verification submitted!');\n      this.pollForStatus();\n    }\n\n  }\n\n  pollForStatus = async() => {\n    if(this.state.verification_status !== STATUS_SUCCESS) {\n      setTimeout(this.pollForStatus, 5000)\n      this.fetchStatus()\n    }\n    if(this.state.verification_status !== STATUS_PENDING && this.state.verification_status !== STATUS_NOT_STARTED) {\n        this.setState({ loaderActive: false, loginDetailsRecieved: true});\n    }\n\n  }\n\n  fetchStatus = async () => {\n    //handle error if session id isn't set\n    fetch('/api/get-verification-session/' + this.state.verification_session_id)\n      .then(res => res.json())\n      .then(data => this.setState({\n        verification_status: data.status, \n        sessionIdRandNum: data.randSeededNum,\n        sessionIdMimcNum: data.mimcVal,\n      }))\n  }\n\nmimcHashNum = async () => {\n const preImage1 = document.getElementById('mimc_num').value\n console.log(preImage1)\n const out = mimc(preImage1);\n console.log(out.toString())\n this.setState({mimcHashNumState: out.toString()});\n\n}\n\nverifyPreimage = async() => {\n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n}\n\nsubmitSolProof = async () => {\n  // event.preventDefault();\n  \n  // CREATING ZKP FROM HASH AND PRE-IMAGE \n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  // this.setState({solidityVerifierProof: solidityProof});\n  console.log(solidityProof)\n\n  // SUBMIT ZKP TO CONTRACT  \n  this.setState({ loaderActive: true, errorMessage: '' });\n  this.setState({verification_status: \"starting eth transaction\"})\n\n  const fullProof = JSON.parse(\"[\" + solidityProof + \"]\");\n\n  const pi_a = fullProof[0]\n  const pi_b = fullProof[1]\n  const pi_c = fullProof[2]\n  const inputs = fullProof[3]\n  \n\n  // send zk proof to verifyHash function\n  try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n          .verifyHash(pi_a,pi_b,pi_c,inputs)\n          .send({\n              from: accounts[0]\n      });\n      \n      console.log(\"submitted zkp successfully\")\n      // Router.reload(window.location.pathname)\n\n      let res = await factory.methods\n          .checkIfAddressVerified()\n          .call({\n              from: accounts[0]\n      });\n      this.setState({zkResult: res.toString()});\n      console.log(\"checked if msg.sender is verified\")\n\n\n  } catch (err) {\n      console.log(\"error in submit sol proof\")\n      this.setState({ errorMessage: err.message });\n  }\n\n  this.setState({loaderActive: false});\n}\n\n\nresetError = () => {\n  this.setState({errorTrue: false, errorMessage: \"\"});\n}\n\n  render() {\n    return (\n        <Layout >\n            <div>\n              <div style={{marginTop: 50, marginLeft: 200}}>\n\n                {/* --------------------SESSION STATUS--------------------- */}\n                <h2>Session status: {this.state.verification_status} &nbsp; &nbsp;\n                {\n                  this.state.loaderActive ?\n                  <Loader active inline size=\"small\" />: null\n                }\n                </h2>\n                {\n                this.state.errorTrue ?\n                <Message negative>\n                  <Message.Header>Error</Message.Header>\n                  <p>{this.state.errorMessage}</p>\n                </Message> : null\n                }\n                {\n                  this.state.accountAlreadyVerified ?\n                  <h3 style={{color:\"green\"}}>Looks like your account is already verified</h3> : null\n                }\n                \n                <hr/>                \n                {/* --------------------VERIFY IDENTITY--------------------- */}\n                <h2>Verify your identity</h2>\n                <Button primary onClick={this.verifyIdentity}>Verify</Button>\n\n                <hr/>\n                \n                {/* --------------------LOGIN CREDENTIALS--------------------- */}\n                <h2>Login credentials</h2>\n                {\n                this.state.loginDetailsRecieved ?\n                  <div>\n                    <h3>Pre-image: &nbsp; <br></br> </h3> \n                    <PreImageButton>{this.state.sessionIdRandNum}</PreImageButton>\n                \n                    <h3>Hash: &nbsp; <br></br></h3>\n                    <HashButton>{this.state.sessionIdMimcNum}</HashButton>\n\n                  </div> : <h4>No login details yet...</h4>\n                }\n                                \n                <hr/>\n                {/* ---------------------SUBMIT PROOF---------------------- */}\n                <h2>Create and submit proof</h2>\n                <p><Input id=\"preImageCredential\" placeholder=\"Pre-image\"></Input></p>\n                <p><Input id=\"mimcHashCredential\" placeholder=\"Hash\"></Input></p>\n                <Button primary onClick={this.submitSolProof} >Send proof</Button> \n\n                <hr/>\n                {/* -----------------------RESULT------------------------ */}\n                <h2>Result: {this.state.zkResult}</h2>\n\n            \n            </div>\n            </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
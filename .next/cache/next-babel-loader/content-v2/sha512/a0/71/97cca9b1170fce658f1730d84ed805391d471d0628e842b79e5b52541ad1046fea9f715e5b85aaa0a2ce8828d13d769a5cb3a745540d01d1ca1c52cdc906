{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\nimport { Router } from '../routes'; // import web3 from '../ethereum/web3' // use this to automatically scan for metamask\n\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\n\nvar web3;\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorTrue: false,\n      errorMessage: \"\",\n      accountAlreadyVerified: false,\n      account: \"No account\",\n      network: \"No network\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.checkMetaMask();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectMetaMaskAccount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var provider;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // let web3;\n              if (true && typeof window.ethereum !== \"undefined\") {\n                // We are in the browser and metamask is running.\n                window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n                web3 = new Web3(window.ethereum);\n                console.log(\"account\", ethereum.selectedAddress);\n                console.log(\"netowrk\", ethereum.networkVersion);\n\n                _this.setState({\n                  network: ethereum.networkVersion,\n                  address: ethereum.selectedAddress\n                });\n              } else {\n                // We are on the server *OR* the user is not running metamask\n                provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n              } // Router.pushRoute('/testing');\n              // this.checkMetaMask();\n\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMetaMask\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context3.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              return _context3.abrupt(\"return\", true);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"MetaMask error\");\n\n              _this.setState({\n                errorMessage: \"It looks like you don't have metamask up and running, which you need to use this service\",\n                errorTrue: true\n              });\n\n              return _context3.abrupt(\"return\", false);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 100,\n              marginLeft: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.connectMetaMaskAccount,\n              children: \"click\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Account: \", this.state.account]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Network: \", this.state.network]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js"],"names":["React","Component","Button","Icon","Dimmer","Layout","PreImageButton","HashButton","Router","Web3","web3","CampaignIndex","errorTrue","errorMessage","accountAlreadyVerified","account","network","checkMetaMask","window","ethereum","request","method","console","log","selectedAddress","networkVersion","setState","address","provider","providers","HttpProvider","eth","getAccounts","accounts","marginTop","marginLeft","connectMetaMaskAccount","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport PreImageButton from \"../components/PreImageButton\";\nimport HashButton from \"../components/HashButton\";\nimport { Router } from '../routes';\n\n// import web3 from '../ethereum/web3' // use this to automatically scan for metamask\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\nlet web3; \n\nclass CampaignIndex extends Component {\n  state = {\n    errorTrue: false,\n    errorMessage: \"\",\n    accountAlreadyVerified: false,\n    account: \"No account\",\n    network: \"No network\",\n\n  }\n \n  // componentDidMount = async () => {\n  //   if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n  //     // We are in the browser and metamask is running.\n  //     // window.ethereum.request({ method: \"eth_requestAccounts\" });\n  //     web3 = new Web3(window.ethereum);\n  //   } else {\n  //     // We are on the server *OR* the user is not running metamask\n  //     const provider = new Web3.providers.HttpProvider(\n  //       \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n  //     );\n  //   }\n\n  // }\n\n  componentDidUpdate = async () => {\n    this.checkMetaMask();\n\n  }\n\n  connectMetaMaskAccount = async () => {\n    // let web3;\n\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      window.ethereum.request({ method: \"eth_requestAccounts\" });\n      web3 = new Web3(window.ethereum);\n      console.log(\"account\", ethereum.selectedAddress)\n      console.log(\"netowrk\", ethereum.networkVersion)\n      this.setState({network: ethereum.networkVersion, address: ethereum.selectedAddress})\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n    // Router.pushRoute('/testing');\n    // this.checkMetaMask();\n\n  }\n  checkMetaMask = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({account: accounts[0]})\n      return true;\n\n    } catch (err) {\n        console.log(\"MetaMask error\")\n        this.setState({ \n          errorMessage: \"It looks like you don't have metamask up and running, which you need to use this service\", \n          errorTrue: true });\n        return false;\n    }\n  }\n  render() {\n\n    return (\n        <Layout>\n          <div>\n          <div style={{marginTop: 100, marginLeft: 200}}>\n\n          \n          <button onClick={this.connectMetaMaskAccount}>click</button> \n          <h3>Account: {this.state.account}</h3>    \n          <h3>Network: {this.state.network}</h3>               \n          </div>\n          </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
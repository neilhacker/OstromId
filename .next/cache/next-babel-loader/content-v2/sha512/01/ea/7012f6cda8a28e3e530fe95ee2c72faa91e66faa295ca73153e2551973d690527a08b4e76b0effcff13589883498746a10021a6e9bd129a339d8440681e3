{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'; // import { Router } from '../routes';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport Router from 'next/router';\nimport { sha256 } from 'js-sha256';\nimport mimc from '../mimc.ts';\nimport { calculateProof } from '../prover.js';\nvar stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\nvar STATUS_PENDING = \"processing\";\nvar STATUS_SUCCESS = \"verified\";\nvar STATUS_ERROR = \"?\";\nvar STATUS_NOT_STARTED = \"not_submitted\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorMessage: '',\n      ethLoading: false,\n      verificationLoading: false,\n      clientSecret: null,\n      stripe: null,\n      verification_status: STATUS_NOT_STARTED,\n      verification_session_id: null,\n      sessionIdRandNum: null,\n      sessionIdMimcNum: null,\n      mimcHashNumState: null,\n      solidityVerifierProof: null,\n      zkResult: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fetch('/api/create-verification-session').then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return _this.setState({\n                  clientSecret: data.clientSecret,\n                  verification_session_id: data.id\n                });\n              });\n              _context.t0 = _this;\n              _context.next = 4;\n              return stripePromise;\n\n            case 4:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                stripe: _context.t1\n              };\n\n              _context.t0.setState.call(_context.t0, _context.t2);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyIdentity\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var _this$state, stripe, clientSecret, _yield$stripe$verifyI, error;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  verificationLoading: true\n                });\n\n                _this$state = _this.state, stripe = _this$state.stripe, clientSecret = _this$state.clientSecret;\n\n                if (!(!stripe || !clientSecret)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                _context2.next = 7;\n                return stripe.verifyIdentity(clientSecret);\n\n              case 7:\n                _yield$stripe$verifyI = _context2.sent;\n                error = _yield$stripe$verifyI.error;\n\n                if (error) {\n                  console.log('[error]', error);\n                } else {\n                  console.log('Verification submitted!');\n\n                  _this.pollForStatus();\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"pollForStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (_this.state.verification_status !== STATUS_SUCCESS) {\n                setTimeout(_this.pollForStatus, 5000);\n\n                _this.fetchStatus();\n              }\n\n              if (_this.state.verification_status !== STATUS_PENDING && _this.state.verification_status !== STATUS_NOT_STARTED) {\n                _this.setState({\n                  verificationLoading: false\n                }); // this.sendEthTransaction() // this calls the eth transaction on the front end\n\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchStatus\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //handle error if session id isn't set\n              fetch('/api/get-verification-session/' + _this.state.verification_session_id).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return _this.setState({\n                  verification_status: data.status,\n                  sessionIdRandNum: data.randSeededNum,\n                  sessionIdMimcNum: data.mimcVal\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"mimcHashNum\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var preImage1, out;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              preImage1 = document.getElementById('mimc_num').value;\n              console.log(preImage1);\n              out = mimc(preImage1);\n              console.log(out.toString());\n\n              _this.setState({\n                mimcHashNumState: out.toString()\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyPreimage\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var preImage, hash, solidityProof;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              preImage = parseInt(document.getElementById('preImageCredential').value);\n              console.log(preImage);\n              hash = document.getElementById('mimcHashCredential').value;\n              console.log(hash);\n              _context6.next = 6;\n              return calculateProof(preImage, hash);\n\n            case 6:\n              solidityProof = _context6.sent;\n\n              // console.log('calculateProof:', solidityProof)\n              _this.setState({\n                solidityVerifierProof: solidityProof\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"submitSolProof\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var fullProof, pi_a, pi_b, pi_c, inputs, res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              // event.preventDefault();\n              _this.setState({\n                ethLoading: true,\n                errorMessage: ''\n              });\n\n              _this.setState({\n                verification_status: \"starting eth transaction\"\n              });\n\n              fullProof = JSON.parse(\"[\" + _this.state.solidityVerifierProof + \"]\");\n              pi_a = fullProof[0];\n              pi_b = fullProof[1];\n              pi_c = fullProof[2];\n              inputs = fullProof[3];\n              console.log('fullProof:', pi_a);\n              console.log('fullProof:', pi_b);\n              console.log('fullProof:', pi_c);\n              console.log('fullProof:', inputs); // send zk proof to verifyHash function\n              // this function can't return info as it is a transaction that changes blockchain\n\n              _context7.prev = 11;\n              _context7.next = 14;\n              return factory.methods.verifyHash(pi_a, pi_b, pi_c, inputs).send({\n                from: \"0xCE7DF6060580e5333c0Ab27e9B67b5634A449d6A\"\n              });\n\n            case 14:\n              console.log(\"submitted zkp successfully\"); // Router.reload(window.location.pathname)\n\n              _context7.next = 17;\n              return factory.methods.checkIfAddressVerified().call({\n                from: \"0xCE7DF6060580e5333c0Ab27e9B67b5634A449d6A\"\n              });\n\n            case 17:\n              res = _context7.sent;\n\n              _this.setState({\n                zkResult: res.toString()\n              });\n\n              console.log(\"checked if msg.sender is verified\");\n              _context7.next = 26;\n              break;\n\n            case 22:\n              _context7.prev = 22;\n              _context7.t0 = _context7[\"catch\"](11);\n              console.log(\"error in submit sol proof\");\n\n              _this.setState({\n                errorMessage: _context7.t0.message\n              });\n\n            case 26:\n              _this.setState({\n                ethLoading: false\n              });\n\n            case 27:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[11, 22]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 200,\n                marginLeft: 200\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Verify your identity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                onClick: this.verifyIdentity,\n                loading: this.state.verificationLoading,\n                children: \"Verify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You have signed \", this.props.count, \" transactions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Session status: \", this.state.verification_status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pre-image: \", this.state.sessionIdRandNum, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Hash: \", this.state.sessionIdMimcNum, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Generate proof\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"preImageCredential\",\n                  placeholder: \"Pre-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"mimcHashCredential\",\n                  placeholder: \"Hash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                onClick: this.verifyPreimage,\n                loading: this.state.ethLoading,\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sol proof: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), this.state.solidityVerifierProof, /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                onClick: this.submitSolProof,\n                loading: this.state.ethLoading,\n                children: \"Submit Proof\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Result: \", this.state.zkResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var count;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return factory.methods.getNumOfVerifiedTransactions().call();\n\n              case 2:\n                count = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  count: count\n                });\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/index.js"],"names":["React","Component","Card","Button","factory","solVerifier","Layout","Link","web3","loadStripe","Router","sha256","mimc","calculateProof","stripePromise","STATUS_PENDING","STATUS_SUCCESS","STATUS_ERROR","STATUS_NOT_STARTED","CampaignIndex","errorMessage","ethLoading","verificationLoading","clientSecret","stripe","verification_status","verification_session_id","sessionIdRandNum","sessionIdMimcNum","mimcHashNumState","solidityVerifierProof","zkResult","fetch","then","res","json","data","setState","id","event","preventDefault","state","verifyIdentity","error","console","log","pollForStatus","setTimeout","fetchStatus","status","randSeededNum","mimcVal","preImage1","document","getElementById","value","out","toString","preImage","parseInt","hash","solidityProof","fullProof","JSON","parse","pi_a","pi_b","pi_c","inputs","methods","verifyHash","send","from","checkIfAddressVerified","call","message","marginTop","marginLeft","props","count","verifyPreimage","submitSolProof","getNumOfVerifiedTransactions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport factory from \"../ethereum/verification\";\nimport solVerifier from \"../ethereum/verifier\";\n\nimport Layout from \"../components/Layout\";\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3'\n// import { Router } from '../routes';\nimport {loadStripe} from '@stripe/stripe-js';\nimport Router from 'next/router'\nimport { sha256 } from 'js-sha256';\nimport mimc from '../mimc.ts';\n\nimport { calculateProof } from '../prover.js'\n\nconst stripePromise = loadStripe(\"pk_test_51J305OC6YuwVjGqqwAGyjYYoOJUC8zZ7rmVJGeav69MVg4FkqWgx92HMg8hAyU6XmnxxiIbn7ynCKjeYIsC4rasv00aYNmSMfW\");\n\nconst STATUS_PENDING = \"processing\"\nconst STATUS_SUCCESS = \"verified\";\nconst STATUS_ERROR = \"?\"\nconst STATUS_NOT_STARTED = \"not_submitted\";\n\nclass CampaignIndex extends Component {\n \n  static async getInitialProps() {\n    const count = await factory.methods.getNumOfVerifiedTransactions().call();\n\n    return { count };\n  }\n\n  state = {\n    errorMessage: '',\n    ethLoading: false,\n    verificationLoading: false,\n    clientSecret: null,\n    stripe: null,\n    verification_status: STATUS_NOT_STARTED,\n    verification_session_id: null,\n    sessionIdRandNum: null,\n    sessionIdMimcNum: null,\n    mimcHashNumState:null,\n    solidityVerifierProof:null,\n    zkResult: null,\n  };  \n\n  componentDidMount = async () => {\n    fetch('/api/create-verification-session')\n    .then(res => res.json())\n    .then(data => this.setState({clientSecret: data.clientSecret, verification_session_id: data.id}))\n\n    this.setState({ stripe: await stripePromise })\n  }\n\n  verifyIdentity = async (event) => {\n    event.preventDefault();\n    this.setState({ verificationLoading: true});\n\n    let { stripe, clientSecret } = this.state;\n    \n    if (!stripe || !clientSecret) {\n      return;\n    }\n\n    // Show the verification modal.\n    const { error } = await stripe.verifyIdentity(clientSecret);\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('Verification submitted!');\n      this.pollForStatus();\n    }\n\n  }\n\n  pollForStatus = async() => {\n    if(this.state.verification_status !== STATUS_SUCCESS) {\n      setTimeout(this.pollForStatus, 5000)\n      this.fetchStatus()\n    }\n    if(this.state.verification_status !== STATUS_PENDING && this.state.verification_status !== STATUS_NOT_STARTED) {\n        this.setState({ verificationLoading: false});\n        // this.sendEthTransaction() // this calls the eth transaction on the front end\n    }\n\n  }\n\n  fetchStatus = async () => {\n    //handle error if session id isn't set\n    fetch('/api/get-verification-session/' + this.state.verification_session_id)\n      .then(res => res.json())\n      .then(data => this.setState({\n        verification_status: data.status, \n        sessionIdRandNum: data.randSeededNum,\n        sessionIdMimcNum: data.mimcVal,\n      }))\n  }\n\nmimcHashNum = async () => {\n const preImage1 = document.getElementById('mimc_num').value\n console.log(preImage1)\n const out = mimc(preImage1);\n console.log(out.toString())\n this.setState({mimcHashNumState: out.toString()});\n\n}\n\nverifyPreimage = async() => {\n  const preImage = parseInt(document.getElementById('preImageCredential').value);\n  console.log(preImage)\n  const hash = document.getElementById('mimcHashCredential').value;\n  console.log(hash)\n  const solidityProof = await calculateProof(preImage, hash);\n  // console.log('calculateProof:', solidityProof)\n  this.setState({solidityVerifierProof: solidityProof});\n}\n\nsubmitSolProof = async () => {\n  // event.preventDefault();\n  \n  this.setState({ ethLoading: true, errorMessage: '' });\n  this.setState({verification_status: \"starting eth transaction\"})\n\n  const fullProof = JSON.parse(\"[\" + this.state.solidityVerifierProof + \"]\");\n\n  const pi_a = fullProof[0]\n  const pi_b = fullProof[1]\n  const pi_c = fullProof[2]\n  const inputs = fullProof[3]\n  console.log('fullProof:', pi_a)\n  console.log('fullProof:', pi_b)\n  console.log('fullProof:', pi_c)\n  console.log('fullProof:', inputs)\n\n  // send zk proof to verifyHash function\n  // this function can't return info as it is a transaction that changes blockchain\n  try {\n      // const accounts = await web3.eth.getAccounts();\n      await factory.methods\n          .verifyHash(pi_a,pi_b,pi_c,inputs)\n          .send({\n              from: \"0xCE7DF6060580e5333c0Ab27e9B67b5634A449d6A\"\n      });\n      \n      console.log(\"submitted zkp successfully\")\n      // Router.reload(window.location.pathname)\n\n      let res = await factory.methods\n          .checkIfAddressVerified()\n          .call({\n              from: \"0xCE7DF6060580e5333c0Ab27e9B67b5634A449d6A\"\n      });\n      this.setState({zkResult: res.toString()});\n      console.log(\"checked if msg.sender is verified\")\n\n\n  } catch (err) {\n      console.log(\"error in submit sol proof\")\n      this.setState({ errorMessage: err.message });\n  }\n\n  this.setState({ethLoading: false});\n}\n\n  render() {\n    return (\n      <>\n        <Layout>\n            <div>\n              <div style={{marginTop: 200, marginLeft: 200}}>\n                <h2>Verify your identity</h2>\n                <Button primary onClick={this.verifyIdentity} loading={this.state.verificationLoading}>Verify</Button>\n                <br></br>\n                <br></br>\n                <p>You have signed {this.props.count} transactions</p>\n                <p>Session status: {this.state.verification_status}</p>\n                \n                <h2>Login credentials</h2>\n                <p>Pre-image: {this.state.sessionIdRandNum} </p>\n                <p>Hash: {this.state.sessionIdMimcNum} </p>\n\n                <h2>Generate proof</h2>\n                <p><input id=\"preImageCredential\" placeholder=\"Pre-image\"></input></p>\n                <p><input id=\"mimcHashCredential\" placeholder=\"Hash\"></input></p>\n                <Button primary onClick={this.verifyPreimage} loading={this.state.ethLoading}>Generate</Button> \n\n\n                <h2>Sol proof: </h2>\n                {this.state.solidityVerifierProof}\n\n                <Button primary onClick={this.submitSolProof} loading={this.state.ethLoading}>Submit Proof</Button>\n\n                <h2>Result: {this.state.zkResult}</h2>\n\n            \n            </div>\n            </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
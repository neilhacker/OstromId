{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Button, Icon, Dimmer } from 'semantic-ui-react';\n\nfunction copyCodeToClipboard1() {\n  var copyText = document.getElementById(\"copybutton1\").innerText;\n  var textarea = document.createElement('textarea');\n  textarea.id = 'temp_element';\n  textarea.style.height = 0;\n  document.body.appendChild(textarea);\n  textarea.value = copyText;\n  var selector = document.querySelector('#temp_element');\n  selector.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea); // this.setState({copySuccess: true />})\n}\n\nvar state = {\n  active: true\n};\n\nfunction handleHide() {\n  console.log(\"showing\");\n  state.active = false;\n}\n\nvar PreImageButton = function PreImageButton(props) {\n  return (\n    /*#__PURE__*/\n    // <Button \n    // icon \n    // labelPosition='right'\n    // id = \"copybutton1\"\n    // onClick={copyCodeToClipboard1}\n    // >\n    // {props.children}\n    // <Icon name='copy' />\n    // </Button>\n    _jsxDEV(Dimmer.Dimmable, {\n      blurring: true,\n      dimmed: state.active,\n      style: {\n        width: \"25%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        id: \"copybutton1\",\n        onClick: copyCodeToClipboard1,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: state.active,\n        inverted: true,\n        onClickOutside: handleHide,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleHide,\n          style: {\n            color: \"black\",\n            backgroundColor: 'rgba(255, 255, 255, 0.1)'\n          },\n          children: \"Click to reveal Pre-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_c = PreImageButton;\nexport default PreImageButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreImageButton\");","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js"],"names":["React","Button","Icon","Dimmer","copyCodeToClipboard1","copyText","document","getElementById","innerText","textarea","createElement","id","style","height","body","appendChild","value","selector","querySelector","select","execCommand","removeChild","state","active","handleHide","console","log","PreImageButton","props","width","children","color","backgroundColor"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;;AAEA,SAASC,oBAAT,GAAgC;AAE5B,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAtD;AACA,MAAIC,QAAQ,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAf;AACAD,EAAAA,QAAQ,CAACE,EAAT,GAAc,cAAd;AACAF,EAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAf,GAAwB,CAAxB;AACAP,EAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BN,QAA1B;AACAA,EAAAA,QAAQ,CAACO,KAAT,GAAiBX,QAAjB;AACA,MAAIY,QAAQ,GAAGX,QAAQ,CAACY,aAAT,CAAuB,eAAvB,CAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT;AACAb,EAAAA,QAAQ,CAACc,WAAT,CAAqB,MAArB;AACAd,EAAAA,QAAQ,CAACQ,IAAT,CAAcO,WAAd,CAA0BZ,QAA1B,EAX4B,CAY5B;AACD;;AAEH,IAAIa,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAC;AADC,CAAZ;;AAIA,SAASC,UAAT,GAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAJ,EAAAA,KAAK,CAACC,MAAN,GAAe,KAAf;AAAqB;;AAEzB,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAE9B;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,EAAEN,KAAK,CAACC,MAAxC;AACA,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAC;AAAP,OADP;AAAA,8BAEA,QAAC,MAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,EAAE,EAAG,aAHP;AAIE,QAAA,OAAO,EAAEzB,oBAJX;AAAA,mBAMCwB,KAAK,CAACE,QANP,eAOA,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,iBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,eAYE,QAAC,MAAD;AACE,QAAA,MAAM,EAAER,KAAK,CAACC,MADhB;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,cAAc,EAAEC,UAHlB;AAAA,+BAKA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,UAAjB;AACA,UAAA,KAAK,EAAE;AAACO,YAAAA,KAAK,EAAC,OAAP;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAgCH,CAlCD;;KAAML,c;AAmCN,eAAeA,cAAf","sourcesContent":["\nimport React from \"react\";\nimport { Button, Icon, Dimmer } from 'semantic-ui-react';\n \nfunction copyCodeToClipboard1() {\n\n    var copyText = document.getElementById(\"copybutton1\").innerText;\n    var textarea = document.createElement('textarea');\n    textarea.id = 'temp_element';\n    textarea.style.height = 0;\n    document.body.appendChild(textarea);\n    textarea.value = copyText;\n    var selector = document.querySelector('#temp_element')\n    selector.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    // this.setState({copySuccess: true />})\n  }\n\nlet state = {\n    active:true,\n  };  \n\nfunction handleHide() { \n    console.log(\"showing\")\n    state.active = false}\n  \nconst PreImageButton = (props) => {\n\n    return(\n        // <Button \n        // icon \n        // labelPosition='right'\n        // id = \"copybutton1\"\n        // onClick={copyCodeToClipboard1}\n        // >\n        // {props.children}\n        // <Icon name='copy' />\n        // </Button>\n        <Dimmer.Dimmable blurring dimmed={state.active} \n        style={{width:\"25%\"}}>\n        <Button \n          icon \n          labelPosition='right'\n          id = \"copybutton1\"\n          onClick={copyCodeToClipboard1}\n        >\n        {props.children}\n        <Icon name='copy' />\n      </Button>\n\n          <Dimmer\n            active={state.active}\n            inverted\n            onClickOutside={handleHide}\n          >\n          <Button onClick={handleHide}\n          style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n          </Dimmer>\n        </Dimmer.Dimmable>\n    )\n};\nexport default PreImageButton;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Router } from '../routes';\nimport factory from \"../ethereum/verification_\"; // import web3 from '../ethereum/web3' // use this to automatically scan for metamask\n\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\n\nvar web3;\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      errorTrue: false,\n      errorMessage: \"\",\n      accountAlreadyVerified: false,\n      account: \"No account\",\n      network: \"No network\",\n      accountDetailsRetrieved: false,\n      depositStatus: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.connectMetaMaskAccountInitialCheck();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectMetaMaskAccountInitialCheck\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var address, network, net, provider;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(true && typeof window.ethereum !== \"undefined\")) {\n                _context2.next = 13;\n                break;\n              }\n\n              // We are in the browser and metamask is running.\n              web3 = new Web3(window.ethereum); // let stuff = await web3.eth.getAccounts()\n              // console.log(\"stuff\", stuff)\n\n              _context2.next = 4;\n              return ethereum.selectedAddress;\n\n            case 4:\n              address = _context2.sent;\n              network = ethereum.networkVersion;\n              console.log(\"account\", address);\n              console.log(\"network\", network);\n              net = _this.networkIntToName(network);\n\n              _this.setState({\n                network: net,\n                account: address\n              });\n\n              if (address != null) {\n                _this.setState({\n                  accountDetailsRetrieved: true\n                });\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 13:\n              // We are on the server *OR* the user is not running metamask\n              provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectMetaMaskAccount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var address, network, net, provider;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(true && typeof window.ethereum !== \"undefined\")) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 3;\n              return window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 3:\n              web3 = new Web3(window.ethereum); // let stuff = await web3.eth.getAccounts()\n              // console.log(\"stuff\", stuff)\n\n              _context3.next = 6;\n              return ethereum.selectedAddress;\n\n            case 6:\n              address = _context3.sent;\n              network = ethereum.networkVersion;\n              console.log(\"account\", address);\n              console.log(\"network\", network);\n              net = _this.networkIntToName(network);\n\n              _this.setState({\n                network: net,\n                account: address\n              });\n\n              if (address != null) {\n                _this.setState({\n                  accountDetailsRetrieved: true\n                });\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 15:\n              // We are on the server *OR* the user is not running metamask\n              provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"networkIntToName\", function (networkId) {\n      switch (networkId) {\n        case \"1\":\n          return \"Main\";\n\n        case \"3\":\n          return \"Ropsten\";\n\n        case \"4\":\n          return \"Rinkeby\";\n\n        case \"42\":\n          return \"Kovan\";\n\n        case \"5\":\n          return \"Goerli\";\n\n        default:\n          return \"Custom\";\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkDepositPaid\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context4.sent;\n              console.log(accounts);\n              _context4.next = 7;\n              return factory.methods.checkIfDepositPaid().call({\n                from: accounts[0]\n              });\n\n            case 7:\n              res = _context4.sent;\n              console.log(\"here\");\n\n              if (res) {\n                _this.setState({\n                  depositStatus: \"Paid\"\n                });\n              } else {\n                _this.setState({\n                  depositStatus: \"Not paid\"\n                });\n              }\n\n              return _context4.abrupt(\"return\", res);\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(\"error when initially checking account\");\n\n              _this.setState({\n                errorMessage: \"It looks like there was an error checking if you had paid the deposit\",\n                errorTrue: true\n              });\n\n              return _context4.abrupt(\"return\", false);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 13]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 100,\n              marginLeft: 200\n            },\n            children: [!this.state.accountDetailsRetrieved ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.connectMetaMaskAccount,\n              style: {\n                color: \"black\",\n                backgroundColor: \"#f9f4f4\",\n                width: \"fit-content\",\n                padding: \"1.5%\",\n                borderRadius: \"12px\",\n                border: \"none\",\n                fontWeight: \"bold\"\n              },\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this) : null, this.state.accountDetailsRetrieved ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"black\",\n                backgroundColor: \"#f9f4f4\",\n                width: \"fit-content\",\n                padding: \"1.5%\",\n                borderRadius: \"12px\",\n                fontWeight: \"bold\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: \"#F4C458\",\n                  // backgroundColor: \"#f9f4f4\",\n                  border: \"solid 1px #F4C458\",\n                  width: \"fit-content\",\n                  padding: \"1.5%\",\n                  borderRadius: \"12px\",\n                  marginBottom: \"2%\"\n                },\n                children: this.state.network\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 11\n              }, this), this.state.account]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 11\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.checkDepositPaid,\n              children: \"check deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 11\n            }, this), this.state.depositStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/pages/testing.js"],"names":["React","Component","Button","Icon","Dimmer","Layout","Router","factory","Web3","web3","CampaignIndex","errorTrue","errorMessage","accountAlreadyVerified","account","network","accountDetailsRetrieved","depositStatus","connectMetaMaskAccountInitialCheck","window","ethereum","selectedAddress","address","networkVersion","console","log","net","networkIntToName","setState","provider","providers","HttpProvider","request","method","networkId","eth","getAccounts","accounts","methods","checkIfDepositPaid","call","from","res","marginTop","marginLeft","state","connectMetaMaskAccount","color","backgroundColor","width","padding","borderRadius","border","fontWeight","marginBottom","checkDepositPaid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Icon, Dimmer } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Router } from '../routes';\n\nimport factory from \"../ethereum/verification_\";\n\n// import web3 from '../ethereum/web3' // use this to automatically scan for metamask\nimport Web3 from \"web3\"; // use this to have connect account button\n// import web3Call from \"../ethereum/web3\";\nlet web3; \n\nclass CampaignIndex extends Component {\n  state = {\n    errorTrue: false,\n    errorMessage: \"\",\n    accountAlreadyVerified: false,\n    account: \"No account\",\n    network: \"No network\",\n    accountDetailsRetrieved: false,\n    depositStatus: null,\n\n  }\n \n  componentDidMount = async () => {\n    await this.connectMetaMaskAccountInitialCheck();\n\n  }\n\n  connectMetaMaskAccountInitialCheck = async () => {\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      \n      web3 = new Web3(window.ethereum);\n\n      // let stuff = await web3.eth.getAccounts()\n      // console.log(\"stuff\", stuff)\n\n      var address = await ethereum.selectedAddress;\n      var network = ethereum.networkVersion;\n\n      console.log(\"account\", address)\n      console.log(\"network\", network)\n\n      const net = this.networkIntToName(network)\n\n      this.setState({network: net, account: address})\n\n      if (address != null) {\n        this.setState({accountDetailsRetrieved: true})\n      }\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n  }\n  \n  connectMetaMaskAccount = async () => {\n    // let web3;\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      \n      web3 = new Web3(window.ethereum);\n\n      // let stuff = await web3.eth.getAccounts()\n      // console.log(\"stuff\", stuff)\n\n      var address = await ethereum.selectedAddress;\n      var network = ethereum.networkVersion;\n\n      console.log(\"account\", address)\n      console.log(\"network\", network)\n\n      const net = this.networkIntToName(network)\n\n      this.setState({network: net, account: address})\n\n      if (address != null) {\n        this.setState({accountDetailsRetrieved: true})\n      }\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n  }\n\n  networkIntToName = (networkId) => {\n    switch(networkId) {\n      case \"1\":\n          return \"Main\"\n      case \"3\":\n        return \"Ropsten\"\n      case \"4\":\n        return \"Rinkeby\"\n      case \"42\":\n        return \"Kovan\";\n      case \"5\":\n        return \"Goerli\";\n      default: \n        return \"Custom\";\n    }\n}\n\ncheckDepositPaid = async () => {\n  try {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts)\n    let res = await factory.methods\n      .checkIfDepositPaid()\n      .call({\n          from: accounts[0]\n    });\n    console.log(\"here\")\n\n    if(res) {\n      this.setState({depositStatus: \"Paid\"})\n    } else {\n      this.setState({depositStatus: \"Not paid\"})\n    }\n    return res;\n\n  } catch (err) {\n      console.log(\"error when initially checking account\")\n      this.setState({ \n        errorMessage: \"It looks like there was an error checking if you had paid the deposit\", \n        errorTrue: true });\n      return false;\n  } \n}\n\n  render() {\n\n    return (\n        <Layout>\n          <div>\n          <div style={{marginTop: 100, marginLeft: 200}}>\n\n          { !this.state.accountDetailsRetrieved ? \n          <button onClick={this.connectMetaMaskAccount} \n          style={{color: \"black\",\n                    backgroundColor: \"#f9f4f4\",\n                    width: \"fit-content\",\n                    padding: \"1.5%\",\n                    borderRadius: \"12px\",\n                    border: \"none\",\n                    fontWeight: \"bold\",\n                    }}\n                    >Connect Wallet</button> : null\n          }\n\n          { this.state.accountDetailsRetrieved ? \n          <div style={{color: \"black\",\n                      backgroundColor: \"#f9f4f4\",\n                      width: \"fit-content\",\n                      padding: \"1.5%\",\n                      borderRadius: \"12px\",\n                      fontWeight: \"bold\",\n          }}>\n           \n          <h4 style={{color: \"#F4C458\",\n                  // backgroundColor: \"#f9f4f4\",\n                  border: \"solid 1px #F4C458\",\n                  width: \"fit-content\",\n                  padding: \"1.5%\",\n                  borderRadius: \"12px\",\n                  marginBottom: \"2%\",\n                  }}>\n          {this.state.network}\n          </h4>   \n         \n            {this.state.account}\n          </div>\n          : null\n          }\n\n          <button onClick={this.checkDepositPaid}>check deposit</button>\n            {this.state.depositStatus}\n          </div>\n          </div>\n        </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Button, Icon, Dimmer } from 'semantic-ui-react';\n\ncopyCodeToClipboard1 = () => {\n  var copyText = document.getElementById(\"copybutton1\").innerText;\n  var textarea = document.createElement('textarea');\n  textarea.id = 'temp_element';\n  textarea.style.height = 0;\n  document.body.appendChild(textarea);\n  textarea.value = copyText;\n  var selector = document.querySelector('#temp_element');\n  selector.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea); // this.setState({copySuccess: true, icon: <Icon name='copy' />})\n};\n\nhandleShow = () => this.setState({\n  active: true\n});\n\nhandleHide = () => this.setState({\n  active: false\n}); // const PreImageButton = (props) => {\n//     return(\n//         // <Button \n//         // icon \n//         // labelPosition='right'\n//         // id = \"copybutton1\"\n//         // onClick={copyCodeToClipboard1}\n//         // >\n//         // {props.children}\n//         // <Icon name='copy' />\n//         // </Button>\n//         <Dimmer.Dimmable blurring dimmed={state.active} \n//         style={{width:\"25%\"}}>\n//         <Button \n//           icon \n//           labelPosition='right'\n//           id = \"copybutton1\"\n//           onClick={copyCodeToClipboard1}\n//         >\n//         {props.children}\n//         <Icon name='copy' />\n//       </Button>\n//           <Dimmer\n//             active={state.active}\n//             inverted\n//             onClickOutside={handleHide}\n//           >\n//           <Button onClick={handleHide}\n//           style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n//           </Dimmer>\n//         </Dimmer.Dimmable>\n//     )\n// };\n// export default PreImageButton;\n\n\nclass PreImageButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      active: true\n    });\n  }\n\n  render() {\n    const {\n      active\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Dimmer.Dimmable, {\n      blurring: true,\n      dimmed: state.active,\n      style: {\n        width: \"25%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        id: \"copybutton1\",\n        onClick: copyCodeToClipboard1,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: state.active,\n        inverted: true,\n        onClickOutside: handleHide,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleHide,\n          style: {\n            color: \"black\",\n            backgroundColor: 'rgba(255, 255, 255, 0.1)'\n          },\n          children: \"Click to reveal Pre-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PreImageButton;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js"],"names":["React","Button","Icon","Dimmer","copyCodeToClipboard1","copyText","document","getElementById","innerText","textarea","createElement","id","style","height","body","appendChild","value","selector","querySelector","select","execCommand","removeChild","handleShow","setState","active","handleHide","PreImageButton","Component","render","state","width","props","children","color","backgroundColor"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;;AAEAC,oBAAoB,GAAG,MAAM;AAEzB,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAtD;AACA,MAAIC,QAAQ,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAf;AACAD,EAAAA,QAAQ,CAACE,EAAT,GAAc,cAAd;AACAF,EAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAf,GAAwB,CAAxB;AACAP,EAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BN,QAA1B;AACAA,EAAAA,QAAQ,CAACO,KAAT,GAAiBX,QAAjB;AACA,MAAIY,QAAQ,GAAGX,QAAQ,CAACY,aAAT,CAAuB,eAAvB,CAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT;AACAb,EAAAA,QAAQ,CAACc,WAAT,CAAqB,MAArB;AACAd,EAAAA,QAAQ,CAACQ,IAAT,CAAcO,WAAd,CAA0BZ,QAA1B,EAXyB,CAYzB;AACD,CAbH;;AAgBAa,UAAU,GAAG,MAAM,KAAKC,QAAL,CAAc;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAd,CAAnB;;AACAC,UAAU,GAAG,MAAM,KAAKF,QAAL,CAAc;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAd,CAAnB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,cAAN,SAA6BC,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AAAEH,MAAAA,MAAM,EAAE;AAAV,KAD2B;AAAA;;AAInCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA;AAAF,QAAa,KAAKK,KAAxB;AACA,wBACE,QAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,EAAEA,KAAK,CAACL,MAAxC;AACA,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAC;AAAP,OADP;AAAA,8BAEA,QAAC,MAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,EAAE,EAAG,aAHP;AAIE,QAAA,OAAO,EAAE1B,oBAJX;AAAA,mBAMC2B,KAAK,CAACC,QANP,eAOA,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAYE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEH,KAAK,CAACL,MADhB;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,cAAc,EAAEC,UAHlB;AAAA,+BAKA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,UAAjB;AACA,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAC,OAAP;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA7BgC;;AAkCrC,eAAeR,cAAf","sourcesContent":["\nimport React from \"react\";\nimport { Button, Icon, Dimmer } from 'semantic-ui-react';\n \ncopyCodeToClipboard1 = () => {\n\n    var copyText = document.getElementById(\"copybutton1\").innerText;\n    var textarea = document.createElement('textarea');\n    textarea.id = 'temp_element';\n    textarea.style.height = 0;\n    document.body.appendChild(textarea);\n    textarea.value = copyText;\n    var selector = document.querySelector('#temp_element')\n    selector.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    // this.setState({copySuccess: true, icon: <Icon name='copy' />})\n  }\n  \n\nhandleShow = () => this.setState({ active: true })\nhandleHide = () => this.setState({ active: false })\n    \n// const PreImageButton = (props) => {\n\n//     return(\n//         // <Button \n//         // icon \n//         // labelPosition='right'\n//         // id = \"copybutton1\"\n//         // onClick={copyCodeToClipboard1}\n//         // >\n//         // {props.children}\n//         // <Icon name='copy' />\n//         // </Button>\n//         <Dimmer.Dimmable blurring dimmed={state.active} \n//         style={{width:\"25%\"}}>\n//         <Button \n//           icon \n//           labelPosition='right'\n//           id = \"copybutton1\"\n//           onClick={copyCodeToClipboard1}\n//         >\n//         {props.children}\n//         <Icon name='copy' />\n//       </Button>\n\n//           <Dimmer\n//             active={state.active}\n//             inverted\n//             onClickOutside={handleHide}\n//           >\n//           <Button onClick={handleHide}\n//           style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n//           </Dimmer>\n//         </Dimmer.Dimmable>\n//     )\n// };\n// export default PreImageButton;\n\nclass PreImageButton extends Component {\n    state = { active: true }\n  \n  \n    render() {\n        const { active } = this.state\n        return (\n          <Dimmer.Dimmable blurring dimmed={state.active} \n          style={{width:\"25%\"}}>\n          <Button \n            icon \n            labelPosition='right'\n            id = \"copybutton1\"\n            onClick={copyCodeToClipboard1}\n          >\n          {props.children}\n          <Icon name='copy' />\n        </Button>\n  \n            <Dimmer\n              active={state.active}\n              inverted\n              onClickOutside={handleHide}\n            >\n            <Button onClick={handleHide}\n            style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n            </Dimmer>\n          </Dimmer.Dimmable>\n        )\n      }\n  \n      \n  }\n  \n  export default PreImageButton"]},"metadata":{},"sourceType":"module"}
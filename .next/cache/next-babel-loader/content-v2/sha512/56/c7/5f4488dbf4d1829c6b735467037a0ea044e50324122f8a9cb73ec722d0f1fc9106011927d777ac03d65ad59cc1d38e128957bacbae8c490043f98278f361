{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/components/OpenVerificationMessage.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Message } from 'semantic-ui-react';\n\nclass OpenVerificationMessage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      visible: true\n    });\n\n    _defineProperty(this, \"handleDismiss\", () => {\n      this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(this, \"content\", () => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Going through the open verification flow will link your \", /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#D70F6C\"\n          },\n          children: \"real name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 65\n        }, this), \" with the account you have active in Metamask and this information will live on chain for \", /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#D70F6C\"\n          },\n          children: \"all to see\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 65\n        }, this), \". You can remove this information in the future from the same account but others will be able to view it until that point. To allow this to happen the \", /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#D70F6C\"\n          },\n          children: \"address you have active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 37\n        }, this), \" on Metamask will be \", /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#D70F6C\"\n          },\n          children: \"sent to stripe \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 114\n        }, this), \"so that if your id check comes back verified the server will be able to automatically add your details to the smart contract. (This address info \", /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#D70F6C\"\n          },\n          children: \"is not sent \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 28\n        }, this), \" at all in the Anonymous process)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  render() {\n    if (this.state.visible) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        onDismiss: this.handleDismiss,\n        header: \"Open verification warning\",\n        content: this.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  }\n\n}\n\nexport default OpenVerificationMessage;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/components/OpenVerificationMessage.js"],"names":["React","Component","Message","OpenVerificationMessage","visible","setState","color","render","state","handleDismiss","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,uBAAN,SAAsCF,SAAtC,CAAgD;AAAA;AAAA;;AAAA,mCACtC;AACNG,MAAAA,OAAO,EAAE;AADH,KADsC;;AAAA,2CAK9B,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAP6C;;AAAA,qCAQpC,MAAM;AACd,0BACE;AAAA,4FAC0D;AAAG,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1D,6GAE0D;AAAG,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF1D,0KAI8B;AAAG,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJ9B,wCAI2G;AAAG,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJ3G,oKAMqB;AAAG,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAnB6C;AAAA;;AAqB9CC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWJ,OAAf,EAAwB;AACtB,0BACE,QAAC,OAAD;AACE,QAAA,SAAS,EAAE,KAAKK,aADlB;AAEE,QAAA,MAAM,EAAC,2BAFT;AAGE,QAAA,OAAO,EAAE,KAAKC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;AAED,WAAO,IAAP;AACD;;AAjC6C;;AAoChD,eAAeP,uBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Message } from 'semantic-ui-react'\n\nclass OpenVerificationMessage extends Component {\n  state = { \n    visible: true,\n   }\n\n  handleDismiss = () => {\n    this.setState({ visible: false })\n  }\n  content = () => {\n    return(\n      <p>\n        Going through the open verification flow will link your <b style={{color:\"#D70F6C\"}}>real name</b> with the account you have active\n        in Metamask and this information will live on chain for <b style={{color:\"#D70F6C\"}}>all to see</b>. You can remove this information in the \n        future from the same account but others will be able to view it until that point. \n        To allow this to happen the <b style={{color:\"#D70F6C\"}}>address you have active</b> on Metamask will be <b style={{color:\"#D70F6C\"}}>sent to stripe </b> \n        so that if your id check comes back verified the server will be able to automatically add your details to the smart contract. \n        (This address info <b style={{color:\"#D70F6C\"}}>is not sent </b> at all in the Anonymous process)\n      </p>\n    )\n  }\n\n  render() {\n    if (this.state.visible) {\n      return (\n        <Message\n          onDismiss={this.handleDismiss}\n          header='Open verification warning'\n          content={this.content}\n        />\n      )\n    }\n\n    return null;\n  }\n}\n\nexport default OpenVerificationMessage\n"]},"metadata":{},"sourceType":"module"}
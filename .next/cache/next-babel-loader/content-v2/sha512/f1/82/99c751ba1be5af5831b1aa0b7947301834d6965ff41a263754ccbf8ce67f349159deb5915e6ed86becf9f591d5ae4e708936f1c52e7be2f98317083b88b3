{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Icon, Dimmer } from 'semantic-ui-react'; // const PreImageButton = (props) => {\n//     return(\n//         // <Button \n//         // icon \n//         // labelPosition='right'\n//         // id = \"copybutton1\"\n//         // onClick={copyCodeToClipboard1}\n//         // >\n//         // {props.children}\n//         // <Icon name='copy' />\n//         // </Button>\n//         <Dimmer.Dimmable blurring dimmed={state.active} \n//         style={{width:\"25%\"}}>\n//         <Button \n//           icon \n//           labelPosition='right'\n//           id = \"copybutton1\"\n//           onClick={copyCodeToClipboard1}\n//         >\n//         {props.children}\n//         <Icon name='copy' />\n//       </Button>\n//           <Dimmer\n//             active={state.active}\n//             inverted\n//             onClickOutside={handleHide}\n//           >\n//           <Button onClick={handleHide}\n//           style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n//           </Dimmer>\n//         </Dimmer.Dimmable>\n//     )\n// };\n// export default PreImageButton;\n\nvar PreImageButton = /*#__PURE__*/function (_Component) {\n  _inherits(PreImageButton, _Component);\n\n  var _super = _createSuper(PreImageButton);\n\n  function PreImageButton() {\n    var _this;\n\n    _classCallCheck(this, PreImageButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      active: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"copyCodeToClipboard1\", function () {\n      var copyText = document.getElementById(\"copybutton1\").innerText;\n      var textarea = document.createElement('textarea');\n      textarea.id = 'temp_element';\n      textarea.style.height = 0;\n      document.body.appendChild(textarea);\n      textarea.value = copyText;\n      var selector = document.querySelector('#temp_element');\n      selector.select();\n      document.execCommand('copy');\n      document.body.removeChild(textarea); // this.setState({copySuccess: true, icon: <Icon name='copy' />})\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleShow\", function () {\n      return _this.setState({\n        active: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHide\", function () {\n      return _this.setState({\n        active: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PreImageButton, [{\n    key: \"render\",\n    value: function render() {\n      var active = this.state.active;\n      return /*#__PURE__*/_jsxDEV(Dimmer.Dimmable, {\n        blurring: true,\n        dimmed: active,\n        style: {\n          width: \"25%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: true,\n          labelPosition: \"right\",\n          id: \"copybutton1\",\n          onClick: this.copyCodeToClipboard1,\n          children: [this.props.children, /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dimmer, {\n          active: active,\n          inverted: true,\n          onClickOutside: this.handleHide,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleHide,\n            style: {\n              color: \"black\",\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            },\n            children: \"Click to reveal Pre-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    }\n  }]);\n\n  return PreImageButton;\n}(Component);\n\nexport default PreImageButton;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_5/components/PreImageButton.js"],"names":["React","Component","Button","Icon","Dimmer","PreImageButton","active","copyText","document","getElementById","innerText","textarea","createElement","id","style","height","body","appendChild","value","selector","querySelector","select","execCommand","removeChild","setState","state","width","copyCodeToClipboard1","props","children","handleHide","color","backgroundColor"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,c;;;;;;;;;;;;;;;;4DACM;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;2EAEe,YAAM;AAEzB,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAtD;AACA,UAAIC,QAAQ,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAf;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAc,cAAd;AACAF,MAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAf,GAAwB,CAAxB;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BN,QAA1B;AACAA,MAAAA,QAAQ,CAACO,KAAT,GAAiBX,QAAjB;AACA,UAAIY,QAAQ,GAAGX,QAAQ,CAACY,aAAT,CAAuB,eAAvB,CAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT;AACAb,MAAAA,QAAQ,CAACc,WAAT,CAAqB,MAArB;AACAd,MAAAA,QAAQ,CAACQ,IAAT,CAAcO,WAAd,CAA0BZ,QAA1B,EAXyB,CAYzB;AACD,K;;iEAGU;AAAA,aAAM,MAAKa,QAAL,CAAc;AAAElB,QAAAA,MAAM,EAAE;AAAV,OAAd,CAAN;AAAA,K;;iEACA;AAAA,aAAM,MAAKkB,QAAL,CAAc;AAAElB,QAAAA,MAAM,EAAE;AAAV,OAAd,CAAN;AAAA,K;;;;;;;6BAGJ;AAAA,UACGA,MADH,GACc,KAAKmB,KADnB,CACGnB,MADH;AAEL,0BACE,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,QAAQ,MAAzB;AAA0B,QAAA,MAAM,EAAEA,MAAlC;AACA,QAAA,KAAK,EAAE;AAACoB,UAAAA,KAAK,EAAC;AAAP,SADP;AAAA,gCAEA,QAAC,MAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,EAAE,EAAG,aAHP;AAIE,UAAA,OAAO,EAAE,KAAKC,oBAJhB;AAAA,qBAMC,KAAKC,KAAL,CAAWC,QANZ,eAOA,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAYE,QAAC,MAAD;AACE,UAAA,MAAM,EAAEvB,MADV;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,cAAc,EAAE,KAAKwB,UAHvB;AAAA,iCAKA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKA,UAAtB;AACA,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,OAAP;AAAgBC,cAAAA,eAAe,EAAE;AAAjC,aADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD;;;;EAhDsB/B,S;;AAqD3B,eAAeI,cAAf","sourcesContent":["\nimport React, { Component } from 'react'\nimport { Button, Icon, Dimmer } from 'semantic-ui-react';\n     \n// const PreImageButton = (props) => {\n\n//     return(\n//         // <Button \n//         // icon \n//         // labelPosition='right'\n//         // id = \"copybutton1\"\n//         // onClick={copyCodeToClipboard1}\n//         // >\n//         // {props.children}\n//         // <Icon name='copy' />\n//         // </Button>\n//         <Dimmer.Dimmable blurring dimmed={state.active} \n//         style={{width:\"25%\"}}>\n//         <Button \n//           icon \n//           labelPosition='right'\n//           id = \"copybutton1\"\n//           onClick={copyCodeToClipboard1}\n//         >\n//         {props.children}\n//         <Icon name='copy' />\n//       </Button>\n\n//           <Dimmer\n//             active={state.active}\n//             inverted\n//             onClickOutside={handleHide}\n//           >\n//           <Button onClick={handleHide}\n//           style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n//           </Dimmer>\n//         </Dimmer.Dimmable>\n//     )\n// };\n// export default PreImageButton;\n\nclass PreImageButton extends Component {\n    state = { active: true }\n  \n    copyCodeToClipboard1 = () => {\n\n        var copyText = document.getElementById(\"copybutton1\").innerText;\n        var textarea = document.createElement('textarea');\n        textarea.id = 'temp_element';\n        textarea.style.height = 0;\n        document.body.appendChild(textarea);\n        textarea.value = copyText;\n        var selector = document.querySelector('#temp_element')\n        selector.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n        // this.setState({copySuccess: true, icon: <Icon name='copy' />})\n      }\n      \n    \n    handleShow = () => this.setState({ active: true })\n    handleHide = () => this.setState({ active: false })\n    \n  \n    render() {\n        const { active } = this.state\n        return (\n          <Dimmer.Dimmable blurring dimmed={active} \n          style={{width:\"25%\"}}>\n          <Button \n            icon \n            labelPosition='right'\n            id = \"copybutton1\"\n            onClick={this.copyCodeToClipboard1}\n          >\n          {this.props.children}\n          <Icon name='copy' />\n        </Button>\n  \n            <Dimmer\n              active={active}\n              inverted\n              onClickOutside={this.handleHide}\n            >\n            <Button onClick={this.handleHide}\n            style={{color:\"black\", backgroundColor: 'rgba(255, 255, 255, 0.1)'}}>Click to reveal Pre-image</Button>\n            </Dimmer>\n          </Dimmer.Dimmable>\n        )\n      }\n  \n      \n  }\n  \n  export default PreImageButton"]},"metadata":{},"sourceType":"module"}
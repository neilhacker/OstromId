{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/components/Header.js\";\nimport React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from '../routes';\n\nasync function connectMetaMaskAccount() {\n  // let web3;\n  if (false && typeof window.ethereum !== \"undefined\") {\n    // We are in the browser and metamask is running.\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    web3 = new Web3(window.ethereum);\n    var address = await ethereum.selectedAddress;\n    var network = ethereum.networkVersion;\n    console.log(\"account\", address);\n    console.log(\"network\", network);\n    const net = this.networkIntToName(network);\n    this.setState({\n      network: net,\n      account: address\n    });\n\n    if (address != null) {\n      this.setState({\n        accountDetailsRetrieved: true\n      });\n      await this.checkIfAccountVerified();\n      await this.checkDepositPaid();\n    }\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\");\n  }\n}\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      route: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"menuOption\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      route: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"menuOption\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      route: \"/checkAddress\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"menuOption\",\n        children: \"Check Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectMetaMaskAccount,\n      className: \"menuOption\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/neilhacker/Desktop/working_on/ostrom_id_copy_6/components/Header.js"],"names":["React","Navbar","Menu","Link","connectMetaMaskAccount","window","ethereum","request","method","web3","Web3","address","selectedAddress","network","networkVersion","console","log","net","networkIntToName","setState","account","accountDetailsRetrieved","checkIfAccountVerified","checkDepositPaid","provider","providers","HttpProvider","Header"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,eAAeC,sBAAf,GAAwC;AACpC;AACA,MAAI,SAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3E;AACA,UAAMD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AAEAC,IAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASL,MAAM,CAACC,QAAhB,CAAP;AAEA,QAAIK,OAAO,GAAG,MAAML,QAAQ,CAACM,eAA7B;AACA,QAAIC,OAAO,GAAGP,QAAQ,CAACQ,cAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AAEA,UAAMI,GAAG,GAAG,KAAKC,gBAAL,CAAsBL,OAAtB,CAAZ;AAEA,SAAKM,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEI,GAAV;AAAeG,MAAAA,OAAO,EAAET;AAAxB,KAAd;;AAEA,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAKQ,QAAL,CAAc;AAACE,QAAAA,uBAAuB,EAAE;AAA1B,OAAd;AACA,YAAM,KAAKC,sBAAL,EAAN;AACA,YAAM,KAAKC,gBAAL,EAAN;AACD;AAEF,GAtBD,MAsBO;AACL;AACA,UAAMC,QAAQ,GAAG,IAAId,IAAI,CAACe,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGD;AACF;;AAEH,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,GAAZ;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,6BACQ;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YALJ,eASI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,eAAZ;AAAA,6BACQ;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI;AAAQ,MAAA,OAAO,EAAEvB,sBAAjB;AACc,MAAA,SAAS,EAAC,YADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArBD;;AAuBA,eAAeuB,MAAf","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from '../routes';\n\nasync function connectMetaMaskAccount() {\n    // let web3;\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      // We are in the browser and metamask is running.\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      \n      web3 = new Web3(window.ethereum);\n\n      var address = await ethereum.selectedAddress;\n      var network = ethereum.networkVersion;\n\n      console.log(\"account\", address)\n      console.log(\"network\", network)\n\n      const net = this.networkIntToName(network)\n\n      this.setState({network: net, account: address})\n\n      if (address != null) {\n        this.setState({accountDetailsRetrieved: true})\n        await this.checkIfAccountVerified()\n        await this.checkDepositPaid()\n      }\n\n    } else {\n      // We are on the server *OR* the user is not running metamask\n      const provider = new Web3.providers.HttpProvider(\n        \"https://rinkeby.infura.io/v3/675a260276d44f54a06355ce65310ba6\"\n      );\n    }\n  }\n\nconst Header = () => {\n    return (\n        <Navbar className=\"menu\">\n            <Link route='/'>\n                <a className=\"menuOption\">Verify</a>\n            </Link>\n\n            <Link route='/about'>\n                    <a className=\"menuOption\">About</a>\n            </Link>\n\n            <Link route='/checkAddress'>\n                    <a className=\"menuOption\">Check Address</a>\n            </Link>\n\n            <button onClick={connectMetaMaskAccount} \n                          className=\"menuOption\"                                    \n                          >Connect Wallet</button> \n           \n        </Navbar>\n    )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}